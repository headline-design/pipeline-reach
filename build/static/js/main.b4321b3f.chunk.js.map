{"version":3,"sources":["App.js","reach-backends/danstorage.mjs","reach-frontends/danstorageFront.mjs","reach-backends/morra.mjs","reach-frontends/morraFront.mjs","reach-backends/nftauction.mjs","reach-frontends/nftauctionFront.mjs","reach-backends/popularitycontest.mjs","reach-frontends/popularitycontestFront.mjs","reportWebVitals.js","index.js"],"names":["role","customStyles","option","provided","state","backgroundColor","isFocused","isSelected","control","display","cursor","borderStyle","borderRadius","borderWidth","borderColor","isFixed","autoFocus","singleValue","opacity","isDisabled","transition","window","launchToken","acct","reachLog","custom","appId","deleteApp","a","algodClient","net","algosdk","Algodv2","getTransactionParams","do","params","txn","makeApplicationDeleteTxnFromObject","suggestedParams","from","sender","appIndex","parseInt","wallet","signTransaction","toByte","signedTxn","sendRawTransaction","blob","response","console","log","txId","creator","compileProgram","client","teal","encoder","TextEncoder","programBytes","encode","compile","compileResponse","alert","MyAlgoConnect","teal2","tealContracts","description","tealNames","reachNames","reachCNames","contracts","contract","require","frontend","text","getContracts","i","length","name","fetch","data","program","data2","clearProgram","document","getElementById","style","contractName","backend","undefined","stdlib","loadStdlib","App","props","deploy","run","error","select","event","value","setState","_ALGO","appApproval","participants","Object","keys","_Participants","toString","frontendText","toggleNet","setWalletFallback","walletFallback","providerEnv","selectTeal","loadTeal","files","contents","selectRole","address","compiled","compiledClear","registrationStart","encodeUint64","firstRound","registrationEnd","voteStart","voteEnd","appArgs","js","eval","converted","forEach","arg","push","lbytes","gbytes","lints","gints","makeApplicationCreateTxnFromObject","numLocalByteSlices","numGlobalByteSlices","numLocalInts","numGlobalInts","approvalProgram","Uint8Array","Buffer","result","onComplete","target","setInterval","textarea","scrollTop","scrollHeight","className","align","id","href","title","my","variant","class","valign","styles","width","menuColor","placeholder","onChange","this","options","label","onClick","getDefaultAccount","then","networkAccount","addr","type","inputAppId","attach","deployTeal","flexDirection","click","readonly","rows","cols","language","showLineNumbers","wrapLines","theme","dracula","codeBlock","customStyle","height","overflow","background","Component","_version","_versionHash","_backendVersion","getExports","s","reachStdlib","_getViews","viewlib","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Bytes","checkedBigNumberify","UInt_max","infos","views","T_Array","_getMaps","mapDataTy","T_Tuple","Oracle","ctcTop","interact","_initialize","Promise","reject","Error","ctc","T_Null","ctc3","ctc4","v152","protect","at","fs","msg","who","v157","lt","assert","sendrecv","args","evt_cnt","funcNum","lct","onlyIf","out_tys","pay","sim_p","txn1","sim_r","txns","mapRefs","mapsPrev","mapsNext","v159","secs","v160","time","didSend","amt","kind","tok","v163","v165","v228","v234","isHalt","soloSend","timeoutAt","tys","waitIfNotPresent","v158","v227","v229","getWord","v237","txn2","v239","v240","v238","v243","addressEq","v245","Array_set","v247","add","cv227","cv228","cv229","appClear","mapDataKeys","mapDataSize","stateKeys","stateSize","unsupported","version","_Connectors","ALGO","ETH","ABI","Bytecode","BytecodeLen","Which","_APIs","input","parseCurrency","accO","ctcO","p","hasConsoleLogger","dialog","T_Digest","Alice","v435","wager","v439","v440","v438","v445","recv","didTimeout","txn3","v699","v703","to","informTimeout","v450","v449","v453","v454","v455","v461","v469","eq","v471","getFingers","v475","getGuess","v476","random","v477","v478","digest","v480","v481","v485","v483","v488","txn4","v666","v670","v484","v490","v494","v492","v497","txn5","v649","v653","v493","v499","txn6","v632","v636","v506","v507","v505","v510","v512","txn7","v615","v619","v515","v516","v514","v519","v521","v526","v527","v528","v525","v531","v532","v533","digestEq","txn8","v598","v602","v535","v538","v539","v540","v537","v543","v544","v545","txn9","v581","v585","v547","v551","seeWinning","v554","v552","v557","v558","v563","cv454","cv455","cv461","v683","v686","mul","v688","txn10","v564","v568","seeOutcome","Bob","acceptWager","v503","v504","v560","accAlice","accBob","fmt","x","formatCurrency","getBalance","balanceOf","FINGERS","OUTCOME","Player","Who","hasRandom","fingers","Math","floor","wait","guess","winningNumber","outcome","beforeAlice","ctcAlice","all","afterAlice","beforeBob","ctcBob","afterBob","T_Bool","Creator","getId","v173","v176","v174","v179","v180","v194","v195","v196","v200","v201","v202","v203","v204","v205","v215","gt","v250","cv201","cv202","cv203","cv204","cv205","v255","cv179","cv180","v236","v242","Owner","T_Object","startingBid","timeout","T_Data","None","Some","ctc5","v175","v185","selfAddress","showOwner","v187","v188","getAuctionProps","v189","v190","v191","v192","v218","v220","v222","v223","v225","getBid","v226","v230","v231","v232","timeoutK","connector","accClaire","everyone","arr","auctionProps","bids","maxBid","trades","makeOwner","acc","getInfo","filter","owner","process","exit","price","bid","randomUInt","Pollster","aliceAddr","bobAddr","deadline","ticketPrice","v138","v137","getParams","v143","v144","v145","v146","v147","v150","v151","v153","v148","v156","v162","v167","ge","v206","v207","v208","v149","v161","v197","cv159","cv160","cv161","cv162","cv167","showOutcome","v182","v183","v186","v193","Voter","getVote","v178","shouldVote","v181","voterWas","N","timeoutFactor","accPollster","Array","accVoter_arr","ctcPollster","ctcInfo","Common","forA","forB","concat","map","accVoter","ctcVoter","vote","voted","voterAddr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b4321b3f.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { loadStdlib } from '@reach-sh/stdlib'\r\nimport MyAlgoConnect from '@reach-sh/stdlib/ALGO_MyAlgoConnect';\r\nimport algosdk from 'algosdk'\r\nimport { CopyBlock, dracula } from 'react-code-blocks';\r\nimport launchToken from '@reach-sh/stdlib/launchToken.mjs';\r\nimport { Button, Select, PipelineShell, Input, Link, Flash, Textarea, AlgoAddress} from 'pipeline-ui'\r\n\r\nvar role = \"Deployer\"\r\n\r\nconst customStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: state.isFocused ?\"#d1d1fa\": \"#ffffff00\",\r\n    backgroundColor: state.isSelected ? '#d1d1fa' : '#ffffff00',\r\n    color: state.isSelected ? 'black' : 'rgb(51, 54, 61)',\r\n    cursor: \"pointer\",\r\n    isActive: true,\r\n    autoFocus: true,\r\n    isFixed: true\r\n\r\n    \r\n  }),\r\n  control: () => ({\r\n    // none of react-select's styles are passed to <Control />\r\n    display: \"flex\",\r\n    cursor: \"pointer\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: \"4px\",\r\n    borderWidth: \"1px\",\r\n    borderColor: \"hsl(0, 0%, 80%)\",\r\n    backgroundColor: \"#fff\",\r\n    isFixed: true,\r\n    autoFocus: true\r\n  }),\r\n  singleValue: (provided, state) => {\r\n    const opacity = state.isDisabled ? 0.5 : 1;\r\n    const transition = 'opacity 300ms';\r\n    return { ...provided, opacity, transition, };\r\n  }\r\n}\r\n\r\nwindow.launchToken = launchToken\r\n\r\nwindow.acct = {}\r\n\r\nwindow.reachLog = \"hello world!\"\r\n\r\nvar custom = false\r\n\r\nvar appId = 0\r\n\r\nwindow.appId = 51807989\r\n\r\nasync function deleteApp() {\r\n  window.reachLog += (\"\\n\" + \"Attempting to delete app...\")\r\n  let algodClient = \"\"\r\n\r\n  if (net === \"TestNet\") {\r\n    algodClient = new algosdk.Algodv2(\"\", 'https://api.testnet.algoexplorer.io', '');\r\n  }\r\n  else {\r\n    algodClient = new algosdk.Algodv2(\"\", 'https://algoexplorerapi.io', '');\r\n  }\r\n  let params = await algodClient.getTransactionParams().do();\r\n\r\n  let txn = algosdk.makeApplicationDeleteTxnFromObject({\r\n    suggestedParams: {\r\n      ...params,\r\n    },\r\n    from: sender,\r\n    appIndex: parseInt(appId),\r\n  });\r\n\r\n  let signedTxn = await wallet.signTransaction(txn.toByte());\r\n  try {\r\n    let response = await algodClient.sendRawTransaction(signedTxn.blob).do();\r\n    console.log(response)\r\n    window.reachLog += (\"\\n\" + \"TXN ID: \" + response.txId)\r\n  }\r\n  catch (error) { console.log(error) }\r\n}\r\n\r\nwindow.creator = false;\r\n\r\nvar sender = \"\"\r\n\r\nasync function compileProgram(client, teal) {\r\n  let encoder = new TextEncoder();\r\n  let programBytes = encoder.encode(teal);\r\n  try {\r\n    let compileResponse = await client.compile(programBytes).do();\r\n    return compileResponse;\r\n  }\r\n  catch (error) { alert(\"invalid TEAL contract\") }\r\n}\r\n\r\nconst wallet = new MyAlgoConnect()\r\n\r\nvar teal = \"\"\r\nvar teal2 = \"\"\r\n\r\nconst tealContracts = {\r\n  \"custom\": {\r\n    description: \"Custom TEAL\"\r\n  },\r\n  \"Permissionless Voting\": {\r\n    description: 'allows anyone to vote on two candidates within a specified \"round\" range'\r\n  },\r\n  \"Permissioned Voting\": {\r\n    description: 'allows anyone who holds a unique ASA to vote on two candidates within a specified \"round\" range'\r\n  }\r\n}\r\n\r\nconst tealNames = [\"Permissionless Voting\", \"Permissioned Voting\"]\r\nconst reachNames = [\"danstorage\", \"morra\",\"nftauction\",\"popularitycontest\"]\r\nconst reachCNames = [\"Dan Storage\", \"Morra Game\",\"NFT Auction\",\"Popularity Contest\"]\r\n\r\nconst contracts = {\r\n  \"Dan Storage\": {\r\n    contract: require('./reach-backends/danstorage.mjs'),\r\n    description: 'Writes then reads data from smart contract 5 times',\r\n    frontend: require('./reach-frontends/danstorageFront.mjs'),\r\n    text: \"\"\r\n  },\r\n  \"Morra Game\": {\r\n    contract: require('./reach-backends/morra.mjs'),\r\n    description: 'Game of two players guessing \"fingers\"',\r\n    frontend: require('./reach-frontends/morraFront.mjs'),\r\n    text: \"\"\r\n  },\r\n  \"NFT Auction\": {\r\n    contract: require('./reach-backends/nftauction.mjs'),\r\n    description: \"An NFT auction\",\r\n    frontend: require('./reach-frontends/nftauctionFront.mjs'),\r\n    text: \"\"\r\n  },\r\n  \"Popularity Contest\": {\r\n    contract: require('./reach-backends/popularitycontest.mjs'),\r\n    description: \"A vote for two candidates\",\r\n    frontend: require('./reach-frontends/popularitycontestFront.mjs'),\r\n    text: \"\"\r\n  }\r\n}\r\n\r\n\r\nasync function getContracts() {\r\n  for (let i = 0; i < tealNames.length; i++) {\r\n    let name = tealNames[i]\r\n    let data = await fetch(\"teal/\" + name + \".txt\")\r\n    tealContracts[name].program = await data.text()\r\n    let data2 = await fetch(\"teal/\" + name + \" clear.txt\")\r\n    tealContracts[name].clearProgram = await data2.text()\r\n  }\r\n  for (let i = 0; i < reachNames.length; i++){\r\n    let name = reachNames[i]\r\n    let data = await fetch(\"reach-frontends/\" + name + \"Front.txt\")\r\n    contracts[reachCNames[i]].text = await data.text()\r\n  }\r\n  document.getElementById(\"loader\").style.display = \"none\"\r\n}\r\n\r\nvar acct = {}\r\n\r\nvar contractName = \"Morra Game\"\r\n\r\nvar backend = undefined\r\n\r\nvar net = \"TestNet\";\r\n\r\nconst stdlib = loadStdlib('ALGO')\r\nwindow.stdlib = stdlib\r\n\r\n//change Algo server IP to match your local stdlib devnet IP, or leave with \"http://localhost\" to test on local machine only.\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      address: \"\",\r\n      description: \"\",\r\n      participants: \"\",\r\n      teal: \"\",\r\n      frontend: \"\",\r\n      frontendText: \"\"\r\n    }\r\n  }\r\n\r\n  deploy = async () => {\r\n\r\n    window.acct = acct\r\n    //code for pipeline \r\n    /*\r\n    async function reachDeploy(address,role,interact){\r\n    let ctcCreator = address.contract(backend);\r\n    await backend[role](ctcCreator, {interact})\r\n    let id = await ctcCreator.getInfo()\r\n    console.log(id)\r\n    return id\r\n      }\r\n    */\r\n    try {\r\n      if (contractName === \"Morra Game\") {\r\n        if (role === \"Deployer\") {\r\n          this.state.frontend.run(role)\r\n        }\r\n        else {\r\n          this.state.frontend.run(role, appId)\r\n        }\r\n      }\r\n      else {\r\n        this.state.frontend.run()\r\n      }\r\n    }\r\n    catch (error) { console.log(error) }\r\n\r\n  }\r\n\r\n  select = (event) => {\r\n    document.getElementById(\"appArgs\").style.display = \"none\"\r\n    if (event.value !== \"Reach Contracts\") {\r\n      backend = contracts[event.value].contract;\r\n      window.backend = backend;\r\n      contractName = event.value;\r\n      this.setState({ description: contracts[event.value].description });\r\n      this.setState({ teal: backend._ALGO.appApproval });\r\n      this.setState({ participants: Object.keys(backend._Participants).toString() })\r\n      this.setState({ frontend: contracts[event.value].frontend })\r\n      this.setState({ frontendText: contracts[event.value].text })\r\n      if (contractName === \"Morra Game\") {\r\n        document.getElementById(\"roles\").style.display = \"block\"\r\n      }\r\n      else {\r\n        document.getElementById(\"roles\").style.display = \"none\"\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ description: \"\" })\r\n      this.setState({ teal: \"\" })\r\n      this.setState({ frontend: \"\" })\r\n      document.getElementById(\"roles\").style.display = \"none\"\r\n    }\r\n  }\r\n\r\n  toggleNet = (event) => {\r\n    if (event.value !== \"Select Net:\") {\r\n      if (event.value === \"MainNet\") {\r\n        net = \"MainNet\"\r\n        stdlib.setWalletFallback(stdlib.walletFallback({\r\n          providerEnv: net, MyAlgoConnect\r\n        }));\r\n      }\r\n      else {\r\n        net = \"TestNet\"\r\n        stdlib.setWalletFallback(stdlib.walletFallback({\r\n          providerEnv: net, MyAlgoConnect\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  selectTeal = (event) => {\r\n    console.log(event.value)\r\n    if (event.value !== \"TEAL Contracts\") {\r\n      if (event.value === \"custom\") { custom = true } else { custom = false }\r\n      teal = tealContracts[event.value].program;\r\n      teal2 = tealContracts[event.value].clearProgram\r\n      contractName = event.value;\r\n      this.setState({ description: tealContracts[event.value].description });\r\n      this.setState({ teal: tealContracts[event.value].program })\r\n      this.setState({ frontend: \"\" })\r\n      this.setState({ frontendText: \"\" })\r\n      this.setState({ participants: \"\" })\r\n      document.getElementById(\"roles\").style.display = \"none\"\r\n    }\r\n    else {\r\n      this.setState({ description: \"\" })\r\n      this.setState({ teal: \"\" })\r\n      this.setState({ frontend: \"\" })\r\n      this.setState({ frontendText: \"\" })\r\n      this.setState({ participants: \"\" })\r\n      document.getElementById(\"roles\").style.display = \"none\"\r\n    }\r\n  }\r\n\r\n  async deployTeal() {\r\n    if (teal !== \"\") {\r\n      window.reachLog = \"Deploying TEAL...\"\r\n      console.log(\"sender: \" + sender)\r\n      let algodClient = \"\"\r\n\r\n      if (net === \"TestNet\") {\r\n        algodClient = new algosdk.Algodv2(\"\", 'https://api.testnet.algoexplorer.io', '');\r\n      }\r\n      else {\r\n        algodClient = new algosdk.Algodv2(\"\", 'https://algoexplorerapi.io', '');\r\n      }\r\n\r\n      let compiled = \"\"\r\n\r\n      compiled = await compileProgram(algodClient, teal)\r\n      let compiledClear = await compileProgram(algodClient, teal2)\r\n\r\n      console.log(compiled)\r\n      const params = await algodClient.getTransactionParams().do();\r\n\r\n      console.log(params)\r\n\r\n      let registrationStart = algosdk.encodeUint64(params.firstRound)\r\n      let registrationEnd = algosdk.encodeUint64(params.firstRound + 1000)\r\n      let voteStart = algosdk.encodeUint64(params.firstRound + 2000)\r\n      let voteEnd = algosdk.encodeUint64(params.firstRound + 3000)\r\n\r\n      let appArgs = custom ? document.getElementById(\"argInput\").value : [registrationStart, registrationEnd, voteStart, voteEnd]\r\n\r\n      if (custom) {\r\n        let js = eval(appArgs)\r\n        let converted = []\r\n        js.forEach(arg => { converted.push(algosdk.encodeUint64(arg)) })\r\n        appArgs = converted\r\n      }\r\n\r\n      console.log(appArgs)\r\n\r\n      let lbytes = 1\r\n      let gbytes = 1\r\n      let lints = 0\r\n      let gints = 6\r\n\r\n      if (custom) {\r\n        lbytes = document.getElementById(\"lbyte\").value\r\n        gbytes = document.getElementById(\"gbyte\").value\r\n        lints = document.getElementById(\"lint\").value\r\n        gints = document.getElementById(\"gint\").value\r\n      }\r\n\r\n      let txn = algosdk.makeApplicationCreateTxnFromObject({\r\n        suggestedParams: {\r\n          ...params,\r\n        },\r\n        from: sender,\r\n        numLocalByteSlices: lbytes,\r\n        numGlobalByteSlices: gbytes,\r\n        numLocalInts: lints,\r\n        numGlobalInts: gints,\r\n        appArgs: appArgs,\r\n        approvalProgram: new Uint8Array(Buffer.from(compiled.result, \"base64\")),\r\n        clearProgram: new Uint8Array(Buffer.from(compiledClear.result, \"base64\")),\r\n        onComplete: 0,\r\n      });\r\n\r\n      let signedTxn = await wallet.signTransaction(txn.toByte());\r\n      console.log(signedTxn)\r\n      let response = await algodClient.sendRawTransaction(signedTxn.blob).do();\r\n      window.reachLog += (\"\\n\" + \"TXN ID: \" + response.txId)\r\n      console.log(response)\r\n    }\r\n    else {\r\n      alert(\"Please select a TEAL contract to deploy!\")\r\n    }\r\n  }\r\n\r\n  inputAppId(event) {\r\n    appId = event.target.value\r\n    console.log(appId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    getContracts();\r\n    setInterval(function () {\r\n      let textarea = document.getElementById('log');\r\n      textarea.value = window.reachLog\r\n      textarea.scrollTop = textarea.scrollHeight;\r\n    }, 200)\r\n  }\r\n\r\n  loadTeal = async () => {\r\n    let contents = await document.getElementById('file-input').files[0].text();\r\n    tealContracts.custom.program = contents\r\n    let clearProgram = `#pragma version 4\r\nint 1\r\n`;\r\n    tealContracts.custom.clearProgram = clearProgram\r\n    this.selectTeal({ value: \"custom\" })\r\n\r\n    document.getElementById(\"appArgs\").style.display = \"block\"\r\n    custom = true\r\n  }\r\n\r\n  selectRole = (event) => {\r\n    role = event.value;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\" align=\"center\">\r\n        <div className=\"loader\" id=\"loader\"></div>\r\n        <h1>Smart Contract Command Lab</h1>\r\n        <h2>What the heck is a \"smart contract\"?</h2>\r\n        <p align=\"justify\">A smart contract is a relatively simplistic TEAL (Transaction Execution Approval Language) program or \"app\" that exists on the blockchain network. It stores a small amount of global and local data and evaluates transactions to either approve or dissapprove them.</p>\r\n        <h2>How can people interact with my smart contract?</h2>\r\n        <p align=\"justify\">After \"opting in\" to the smart contract, they can send an \"app call\" transaction to the Algorand network along with any relevant \"arguments\" or other transaction. The number of transactions in each group and their formats will vary between contracts. When using Reach, the exported \"participants\" are functions that are called to initiate each transaction. The user function takes the arguments of userAddress.attach(window.backend, ctcCreator.getInfo()); and an \"interact\" object. The need for a \"backend\" can be easily and completely eliminated by obtaining and sharing the value of ctcCreator.getInfo() app id by other means.</p>\r\n        <h2>Why use this tool?</h2>\r\n        <p align=\"justify\">Currently, TEAL contract creation has minimal support for client-only JavaScript, the <i>lingua franca</i> of the decentralized online world. Creating and deploying smart contracts requires downloading and running numerous third-party software packages, using esoteric single-use languages and working with intimidating command line tools. in In order to boost decentralization and broad adoption, we are working towards complete browser-only backend-free  solutions to creation, deployment and integration.</p>\r\n        <h2>Instructions</h2>\r\n        <p align=\"justify\">After connecting to your wallet, select a contract and deploy! The Reach Button will both deploy the contract and run the \"frontend\" code below, with your address simulating all participant interactions (with the exception of the Morra Game, which we working to adapt for simultaneously interaction between multiple real-world participants). For real-world use, the code specific to each participant must be isolated from this code and run with different accounts. Exercise extreme caution with mainNet, as your account may be drained. On testnet, attempting to create more than 10 smart contracts will fail. Other failures will be triggered by not having your wallet set to testnet, or not having enough funds. To fund your testnet account, simply visit: <Link href=\"https://testnet.algoexplorer.io/dispenser\" target=\"_blank\" title=\"Algo Dispenser\">\r\n          the AlgoExplorer Dispenser\r\n        </Link></p>\r\n        <Flash my={3} variant=\"danger\">\r\n          WARNING!!! Reach code must run to completion, at which point a prompt will appear to allow the deletion of the smart contract. Due to the nature of the Reach code, a significant amount of time may pass while it appears nothing is happening. Please be patient and sign all transactions!\r\n        </Flash>\r\n        <table><thead><th>Modules</th><th>Log</th></thead>\r\n        \r\n          <tr class=\"pipeline-shell\"><td valign=\"top\">\r\n            <PipelineShell>\r\n              <div class=\"selectorbox\">\r\n              <Select       styles={customStyles} width='200px' menuColor='red' id=\"net\" placeholder=\"Select Net...\"  onChange={this.toggleNet} options={[\r\n                { value: 'TestNet', label: 'TestNet' }\r\n              ]}></Select>\r\n              \r\n              <br></br>\r\n              <Button className=\"furby\" onClick={() => stdlib.getDefaultAccount().then(data2 => {\r\n                let address = data2.networkAccount.addr;\r\n                acct = data2;\r\n                this.setState({ address: address })\r\n                sender = address\r\n                console.log(acct);\r\n              })\r\n              }>Connect</Button>\r\n              <AlgoAddress address={this.state.address}></AlgoAddress>\r\n              </div>\r\n              <br></br>\r\n              <div className=\"selectorbox\">\r\n              <Link href=\"https://github.com/reach-sh/reach-lang/tree/master/examples\" target=\"_blank\" >Github Source</Link>\r\n              <br></br><br></br>\r\n              <Select placeholder=\"Select Reach contract...\" styles={customStyles} onChange={this.select} options={[\r\n                { value: 'Reach Contracts', label: 'Reach Contracts' },\r\n                { value: 'Morra Game', label: 'Morra Game' },\r\n                { value: 'Popularity Contest', label: 'Popularity Contest' },\r\n                { value: 'Dan Storage', label: 'Dan Storage' },\r\n                { value: 'NFT Auction', label: 'NFT Auction' }\r\n              ]}></Select>\r\n              <div id=\"roles\" style={{ display: \"none\" }}>\r\n                <Select styles={customStyles} placeholder=\"Select role...\" onChange={this.selectRole} options={[\r\n                  { value: 'Deployer', label: 'Deployer & Participant' },\r\n                  { value: 'Participant', label: 'Participant' },\r\n                ]}></Select>\r\n                <Input type=\"number\" placeholder=\"App Id...\" onChange={this.inputAppId}></Input>\r\n              </div>\r\n              <br></br>\r\n              <Button onClick={this.deploy}>Deploy & Run Reach</Button>\r\n              <div align=\"left\">\r\n                <p><b>Description: </b>{this.state.description}</p>\r\n                <p><b>Participants: </b>{this.state.participants}</p>\r\n              </div>\r\n              <br></br>\r\n              <Button onClick={this.attach} style={{ display: \"none\" }}>Attach</Button><br></br>\r\n              </div>\r\n              <br></br>\r\n              <div className=\"selectorbox\">\r\n              <Link href=\"https://github.com/algorand/smart-contracts/tree/master/devrel\" target=\"_blank\" >Github Source</Link>\r\n              <br></br><br></br>\r\n              <Select placeholder=\"Select TEAL contract...\" styles={customStyles} onChange={this.selectTeal} options={[\r\n                { value: 'TEAL Contracts', label: 'TEAL Contracts' },\r\n                { value: 'Permissionless Voting', label: 'Permissionless Voting' },\r\n                { value: 'Permissioned Voting', label: 'Permissioned Voting' }\r\n              ]}></Select>\r\n              <br></br>\r\n              <Button onClick={this.deployTeal}>Deploy TEAL Contract</Button>\r\n              <input id=\"file-input\" type=\"file\" onChange={this.loadTeal} style={{ display: \" none\" }} />\r\n  \r\n              <div id=\"appArgs\" style={{ display: \"none\", }}>\r\n                <div style={{display: \"flex\",flexDirection: \"column\"}}>\r\n                <label>Local Byte Slices</label><input id=\"lbyte\"></input><br></br>\r\n                <label>Global Byte Slices</label><input id=\"gbyte\"></input><br></br>\r\n                <label>Local Integers</label><input id=\"lint\"></input><br></br>\r\n                <label>Global Integers</label><input id=\"gint\"></input><br></br>\r\n                <p>App Args</p>\r\n                <textarea id=\"argInput\">{\"[\\n]\"}</textarea>\r\n                </div>\r\n              </div>\r\n              <br></br><br></br>\r\n              <Button className=\"btn-outlinez\" onClick={() => document.getElementById('file-input').click()}>Load Custom</Button>\r\n              <p></p>\r\n\r\n              </div>\r\n              <br></br><br></br><div class=\"selectorbox\"><Input className=\"pipeline-input\" type=\"number\" onChange={this.inputAppId} placeholder=\"app id\"></Input><Button onClick={() => { deleteApp(appId) }}>Delete TEAL Contract</Button></div>\r\n            </PipelineShell>\r\n            \r\n          </td>\r\n            <td valign=\"top\">\r\n              <textarea style={{ \"background-color\": \"black\", \"color\": \"yellow\" }} id=\"log\" readonly rows=\"65\" cols=\"50\">\r\n                Testing\r\n                hello\r\n              </textarea>\r\n            </td></tr>\r\n        </table>\r\n        <table width=\"100%\"><thead><th align=\"center\">Teal Code</th><th align=\"center\">Frontend Code</th></thead></table>\r\n        <div align=\"left\" className=\"snoopy\" style={{display: \"flex\"}}>\r\n               \r\n                  <CopyBlock\r\n                    text={this.state.teal}\r\n                    language={\"cpp\"}\r\n                    showLineNumbers={true}\r\n                    wrapLines\r\n                    theme={dracula}\r\n                    codeBlock\r\n                    customStyle={{\r\n                      height: 'auto',\r\n                      width: \"50%\",\r\n                      overflow: 'scroll',\r\n                      align: \"left\",\r\n                      background: \"#fff\",\r\n                      backgroundColor: \"#fff\",\r\n                      borderColor: \"#D7DAE0\",\r\n                    }}\r\n                  />\r\n                <CopyBlock\r\n                    text={this.state.frontendText}\r\n                    language={\"js\"}\r\n                    showLineNumbers={true}\r\n                    wrapLines\r\n                    theme={dracula}\r\n                    codeBlock\r\n                    customStyle={{\r\n                      width: \"50%\",\r\n                      height: 'auto',\r\n                      overflow: 'scroll',\r\n                      align: \"left\",\r\n                      background: \"#fff\",\r\n                      backgroundColor: \"#fff\",\r\n                      borderColor: \"#D7DAE0\",\r\n                    }}\r\n                  />\r\n                  </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// Automatically generated with Reach 0.1.7 (d2352c9e)\n/* eslint-disable */\nexport const _version = '0.1.7';\nexport const _versionHash = '0.1.7 (d2352c9e)';\nexport const _backendVersion = 6;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc3 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 20));\n  \n  return {\n    infos: {\n      },\n    views: {\n      3: [ctc0, ctc1, ctc3, ctc1]\n      }\n    };\n  \n  };\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\nexport async function Oracle(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Oracle expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Oracle expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Null;\n  const ctc2 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc3 = stdlib.T_Address;\n  const ctc4 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 20));\n  \n  \n  const v152 = stdlib.protect(ctc0, interact.i, 'for Oracle\\'s interact field i');\n  \n  const v154 = 'Deploying...';\n  stdlib.protect(ctc1, await interact.log(v154), {\n    at: './index.rsh:1:39:application',\n    fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:19:22:application call to \"liftedInteract\" (defined at: ./index.rsh:19:22:application)'],\n    msg: 'log',\n    who: 'Oracle'\n    });\n  \n  const v157 = stdlib.lt(v152, stdlib.checkedBigNumberify('./index.rsh:3:13:decimal', stdlib.UInt_max, 20));\n  stdlib.assert(v157, {\n    at: './index.rsh:22:11:application',\n    fs: ['at ./index.rsh:20:14:application call to [unknown function] (defined at: ./index.rsh:20:18:function exp)'],\n    msg: null,\n    who: 'Oracle'\n    });\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v152],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:24:10:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v159], secs: v161, time: v160, didSend: v30, from: v158 } = txn1;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v163 = stdlib.lt(v159, stdlib.checkedBigNumberify('./index.rsh:3:13:decimal', stdlib.UInt_max, 20));\n      stdlib.assert(v163, {\n        at: './index.rsh:25:10:application',\n        fs: [],\n        msg: null,\n        who: 'Oracle'\n        });\n      const v165 = '                                                                ';\n      const v226 = [v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165];\n      const v227 = v226;\n      const v228 = stdlib.checkedBigNumberify('./index.rsh:27:56:decimal', stdlib.UInt_max, 0);\n      const v229 = v160;\n      \n      if (await (async () => {\n        const v234 = stdlib.lt(v228, v159);\n        \n        return v234;})()) {\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n          })\n        sim_r.isHalt = true;\n        }\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n    }));\n  const {data: [v159], secs: v161, time: v160, didSend: v30, from: v158 } = txn1;\n  ;\n  const v163 = stdlib.lt(v159, stdlib.checkedBigNumberify('./index.rsh:3:13:decimal', stdlib.UInt_max, 20));\n  stdlib.assert(v163, {\n    at: './index.rsh:25:10:application',\n    fs: [],\n    msg: null,\n    who: 'Oracle'\n    });\n  const v165 = '                                                                ';\n  const v226 = [v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165, v165];\n  let v227 = v226;\n  let v228 = stdlib.checkedBigNumberify('./index.rsh:27:56:decimal', stdlib.UInt_max, 0);\n  let v229 = v160;\n  \n  while (await (async () => {\n    const v234 = stdlib.lt(v228, v159);\n    \n    return v234;})()) {\n    const v237 = stdlib.protect(ctc2, await interact.getWord(v227), {\n      at: './index.rsh:32:44:application',\n      fs: ['at ./index.rsh:31:16:application call to [unknown function] (defined at: ./index.rsh:31:20:function exp)'],\n      msg: 'getWord',\n      who: 'Oracle'\n      });\n    \n    const txn2 = await (ctc.sendrecv({\n      args: [v158, v159, v227, v228, v237],\n      evt_cnt: 1,\n      funcNum: 2,\n      lct: v229,\n      onlyIf: true,\n      out_tys: [ctc2],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn2) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v239], secs: v241, time: v240, didSend: v137, from: v238 } = txn2;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v243 = stdlib.addressEq(v158, v238);\n        stdlib.assert(v243, {\n          at: './index.rsh:34:12:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Oracle'\n          });\n        const v245 = stdlib.Array_set(v227, v228, v239);\n        \n        const v247 = stdlib.add(v228, stdlib.checkedBigNumberify('./index.rsh:37:40:decimal', stdlib.UInt_max, 1));\n        const cv227 = v245;\n        const cv228 = v247;\n        const cv229 = v240;\n        \n        await (async () => {\n          const v227 = cv227;\n          const v228 = cv228;\n          const v229 = cv229;\n          \n          if (await (async () => {\n            const v234 = stdlib.lt(v228, v159);\n            \n            return v234;})()) {\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.txns.push({\n              kind: 'halt',\n              tok: undefined\n              })\n            sim_r.isHalt = true;\n            }})();\n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc3, ctc0, ctc4, ctc0, ctc2],\n      waitIfNotPresent: false\n      }));\n    const {data: [v239], secs: v241, time: v240, didSend: v137, from: v238 } = txn2;\n    ;\n    const v243 = stdlib.addressEq(v158, v238);\n    stdlib.assert(v243, {\n      at: './index.rsh:34:12:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Oracle'\n      });\n    const v245 = stdlib.Array_set(v227, v228, v239);\n    stdlib.protect(ctc1, await interact.log(v245), {\n      at: './index.rsh:1:39:application',\n      fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:36:24:application call to \"liftedInteract\" (defined at: ./index.rsh:36:24:application)'],\n      msg: 'log',\n      who: 'Oracle'\n      });\n    \n    const v247 = stdlib.add(v228, stdlib.checkedBigNumberify('./index.rsh:37:40:decimal', stdlib.UInt_max, 1));\n    const cv227 = v245;\n    const cv228 = v247;\n    const cv229 = v240;\n    \n    v227 = cv227;\n    v228 = cv228;\n    v229 = cv229;\n    \n    continue;\n    \n    }\n  return;\n  \n  \n  };\nexport const _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\nint 8\nextract_uint64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 255\npop\n// \"CheckPay\"\n// \"./index.rsh:24:10:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:24:10:dot\"\n// \"[]\"\n// Nothing\n// \"./index.rsh:25:10:application\"\n// \"[]\"\nload 255\nint 20\n<\nassert\nbyte base64(ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==)\nstore 254\ntxn Sender\nload 255\nitob\nconcat\nload 254\ndup\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nload 254\nconcat\nint 8\nbzero\nconcat\nglobal Round\nitob\nconcat\nb loopBody1\nl0_afterHandler0:\nl2_afterHandler1:\n// Handler 2\ndup\nint 2\n==\nbz l3_afterHandler2\npop\n// check step\nint 3\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\nbyte base64(Ag==)\napp_global_get\nconcat\nbyte base64(Aw==)\napp_global_get\nconcat\nbyte base64(BA==)\napp_global_get\nconcat\nbyte base64(BQ==)\napp_global_get\nconcat\nbyte base64(Bg==)\napp_global_get\nconcat\nbyte base64(Bw==)\napp_global_get\nconcat\nbyte base64(CA==)\napp_global_get\nconcat\nbyte base64(CQ==)\napp_global_get\nconcat\nbyte base64(Cg==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nint 1280\nextract3\nstore 253\ndup\nint 1320\nint 8\nextract3\nbtoi\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 64\n==\nassert\ndup\nstore 251\npop\n// \"CheckPay\"\n// \"./index.rsh:34:12:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:34:12:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nint 0\nint 64\nload 252\n*\nsubstring3\nload 251\nconcat\nload 253\nint 64\ndup\nload 252\n*\n+\nint 1280\nsubstring3\nconcat\nload 252\nint 1\n+\nitob\nconcat\nglobal Round\nitob\nconcat\nb loopBody1\nl3_afterHandler2:\nint 0\nassert\nloopBody1:\ndup\nint 0\nint 1280\nextract3\nstore 255\ndup\nint 1280\nint 8\nextract3\nbtoi\nstore 254\ndup\nint 1288\nint 8\nextract3\nbtoi\nstore 253\npop\ndup\nextract 0 32\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\npop\nload 254\nload 251\n<\nbz l4_ifF\nload 252\nload 251\nitob\nconcat\nload 255\nconcat\nload 254\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 127\napp_global_put\nbyte base64(AQ==)\ndig 1\nextract 127 127\napp_global_put\nbyte base64(Ag==)\ndig 1\nextract 254 127\napp_global_put\nbyte base64(Aw==)\ndig 1\nint 381\nint 127\nextract3\napp_global_put\nbyte base64(BA==)\ndig 1\nint 508\nint 127\nextract3\napp_global_put\nbyte base64(BQ==)\ndig 1\nint 635\nint 127\nextract3\napp_global_put\nbyte base64(Bg==)\ndig 1\nint 762\nint 127\nextract3\napp_global_put\nbyte base64(Bw==)\ndig 1\nint 889\nint 127\nextract3\napp_global_put\nbyte base64(CA==)\ndig 1\nint 1016\nint 127\nextract3\napp_global_put\nbyte base64(CQ==)\ndig 1\nint 1143\nint 127\nextract3\napp_global_put\nbyte base64(Cg==)\ndig 1\nint 1270\nint 58\nextract3\napp_global_put\npop\nint 3\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl4_ifF:\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl5_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 11,\n  stateSize: 1328,\n  unsupported: [],\n  version: 6\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v159\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v159\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T1\",\n                \"name\": \"v239\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T1\",\n                \"name\": \"v239\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060405260405162000ed238038062000ed283398101604081905262000026916200047c565b600080554360035562000038620002aa565b604080518351815260208085015151908201527fd2fa1fac07e66d08cb46271d2f3a2585d9761d2d591a51cc30a2056942bc38db910160405180910390a16200008434156007620001cc565b6020820151516200009a906014116008620001cc565b80517f2020202020202020202020202020202020202020202020202020202020202020908190528151602090810191909152815181830180519190915282518151909201919091528151815160400152815181516060015281518151608001528151815160a001528151815160c001528151815160e00152815181516101000152815181516101200152815181516101400152815181516101600152815181516101800152815181516101a00152815181516101c00152815181516101e0015281518151610200015281518151610220015281518151610240015281519051610260015262000188620002da565b805133905260208084015151825182015282810151818301805191909152805160009201919091525143604090910152620001c381620001f6565b505050620005c4565b81620001f25760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b80600001516020015181602001516020015110156200028f576200021962000305565b8151516001600160a01b03168152815160209081015181830152808301805151604080850191909152905182015160608401526003600055436001555162000264918391016200051e565b604051602081830303815290604052600290805190602001906200028a92919062000333565b505050565b60008080556001819055620002a790600290620003c2565b50565b604080516080810182526000918101828152606082019290925290815260208101620002d562000401565b905290565b604080516080810182526000918101828152606082019290925290815260208101620002d56200043c565b60408051608081018252600080825260208201529081016200032662000401565b8152602001600081525090565b828054620003419062000587565b90600052602060002090601f016020900481019282620003655760008555620003b0565b82601f106200038057805160ff1916838001178555620003b0565b82800160010185558215620003b0579182015b82811115620003b057825182559160200191906001019062000393565b50620003be92915062000465565b5090565b508054620003d09062000587565b6000825580601f10620003e1575050565b601f016020900490600052602060002090810190620002a7919062000465565b6040518061028001604052806014905b6040805180820190915260008082526020820152815260200190600190039081620004115790505090565b60405180606001604052806200045162000401565b815260200160008152602001600081525090565b5b80821115620003be576000815560010162000466565b60008183036040808212156200049157600080fd5b80518082016001600160401b038082118383101715620004c157634e487b7160e01b600052604160045260246000fd5b818452865183526020601f1986011215620004db57600080fd5b8351945060208501915084821081831117156200050857634e487b7160e01b600052604160045260246000fd5b5090915260209384015182529283015250919050565b81516001600160a01b0316815260208083015181830152604080840151610560840192919081850160005b6014811015620005715782518051835285015185830152918401919083019060010162000549565b5050505050606083015161054083015292915050565b600181811c908216806200059c57607f821691505b60208210811415620005be57634e487b7160e01b600052602260045260246000fd5b50919050565b6108fe80620005d46000396000f3fe6080604052600436106100405760003560e01c806316697f16146100495780631e93b0f11461005c5780638323075714610080578063ab53f2c61461009557005b3661004757005b005b6100476100573660046105e5565b6100b8565b34801561006857600080fd5b506003545b6040519081526020015b60405180910390f35b34801561008c57600080fd5b5060015461006d565b3480156100a157600080fd5b506100aa610277565b6040516100779291906105fd565b6100c8600360005414600b610314565b6100e2813515806100db57506001548235145b600c610314565b6000808055600280546100f49061065a565b80601f01602080910402602001604051908101604052809291908181526020018280546101209061065a565b801561016d5780601f106101425761010080835404028352916020019161016d565b820191906000526020600020905b81548152906001019060200180831161015057829003601f168201915b50505050508060200190518101906101859190610715565b604080518435815260208086013590820152848201358183015290519192507fae42ef93ac68ebbff6b40c4aea42b9ca92ece40435cdcb681bc52ffb796cfdc5919081900360600190a16101db34156009610314565b80516101f3906001600160a01b03163314600a610314565b6101fb610457565b815181516001600160a01b03909116905260208083015182518201526040830151606084015161023c92610237903688900388019088016107d0565b61033d565b602082015152606082015161025390600190610818565b60208083018051909101919091525143604090910152610272816103b1565b505050565b60006060600054600280805461028c9061065a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b89061065a565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b50505050509050915091509091565b816103395760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b610345610485565b60005b60148110156103915784816014811061036357610363610830565b602002015182826014811061037a5761037a610830565b60200201528061038981610846565b915050610348565b50818184601481106103a5576103a5610830565b60200201529392505050565b806000015160200151816020015160200151101561043e576103d16104bf565b8151516001600160a01b03168152815160209081015181830152808301805151604080850191909152905182015160608401526003600055436001555161041a91839101610861565b604051602081830303815290604052600290805190602001906102729291906104eb565b600080805560018190556104549060029061056f565b50565b6040805160808101825260009181018281526060820192909252908152602081016104806105a9565b905290565b6040518061028001604052806014905b60408051808201909152600080825260208201528152602001906001900390816104955790505090565b60408051608081018252600080825260208201529081016104de610485565b8152602001600081525090565b8280546104f79061065a565b90600052602060002090601f016020900481019282610519576000855561055f565b82601f1061053257805160ff191683800117855561055f565b8280016001018555821561055f579182015b8281111561055f578251825591602001919060010190610544565b5061056b9291506105d0565b5090565b50805461057b9061065a565b6000825580601f1061058b575050565b601f01602090049060005260206000209081019061045491906105d0565b60405180606001604052806105bc610485565b815260200160008152602001600081525090565b5b8082111561056b57600081556001016105d1565b6000606082840312156105f757600080fd5b50919050565b82815260006020604081840152835180604085015260005b8181101561063157858101830151858201606001528201610615565b81811115610643576000606083870101525b50601f01601f191692909201606001949350505050565b600181811c9082168061066e57607f821691505b602082108114156105f757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156106c8576106c861068f565b60405290565b604051610280810167ffffffffffffffff811182821017156106c8576106c861068f565b6040805190810167ffffffffffffffff811182821017156106c8576106c861068f565b6000610560828403121561072857600080fd5b6107306106a5565b82516001600160a01b038116811461074757600080fd5b8152602083810151818301526040605f8501861361076457600080fd5b61076c6106ce565b8061054087018881111561077f57600080fd5b8388015b818110156107bc5784818b03121561079b5760008081fd5b6107a36106f2565b8151815286820151878201528452928501928401610783565b509285015250516060830152509392505050565b6000604082840312156107e257600080fd5b6107ea6106f2565b82358152602083013560208201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561082b5761082b610802565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561085a5761085a610802565b5060010190565b81516001600160a01b0316815260208083015181830152604080840151610560840192919081850160005b60148110156108b25782518051835285015185830152918401919083019060010161088c565b505050505060608301516105408301529291505056fea26469706673582212202bc3dc82f67ccb873cfa34119772dfb54de2649551600abd413a1de54b25d82764736f6c63430008090033`,\n  BytecodeLen: 3794,\n  Which: `oD`,\n  version: 5,\n  views: {\n    }\n  };\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\nexport const _Participants = {\n  \"Oracle\": Oracle\n  };\nexport const _APIs = {\n  };\n","export async function run() {\n  window.reachLog = \"Starting reach...\"\n\n  function log(input){\n    window.reachLog += (\"\\n\" + input)\n  }\n  const startingBalance = window.stdlib.parseCurrency(1);\n  const accO = window.acct\n  const ctcO = accO.contract(window.backend);\n\n  await ctcO.p.Oracle({\n    ...window.stdlib.hasConsoleLogger,\n    i: 5,\n    getWord: (dialog) => {\n      log(`getWord` + dialog.toString());\n      return '';\n    },\n  });\n}\n","// Automatically generated with Reach 0.1.7 (d2352c9e)\n/* eslint-disable */\nexport const _version = '0.1.7';\nexport const _versionHash = '0.1.7 (d2352c9e)';\nexport const _backendVersion = 6;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n  };\n};\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Digest;\n\n  return {\n    infos: {\n    },\n    views: {\n      1: [ctc0, ctc1, ctc1],\n      5: [ctc0, ctc1, ctc0, ctc1, ctc1],\n      7: [ctc0, ctc1, ctc0, ctc1, ctc2, ctc1],\n      9: [ctc0, ctc1, ctc0, ctc1, ctc2, ctc2, ctc1],\n      11: [ctc0, ctc1, ctc0, ctc1, ctc2, ctc2, ctc1, ctc1],\n      13: [ctc0, ctc1, ctc0, ctc1, ctc2, ctc2, ctc1, ctc1, ctc1],\n      15: [ctc0, ctc1, ctc0, ctc1, ctc2, ctc1, ctc1, ctc1, ctc1],\n      17: [ctc0, ctc1, ctc0, ctc1, ctc1, ctc1, ctc1, ctc1, ctc1]\n    }\n  };\n\n};\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n  };\n};\nexport async function Alice(ctcTop, interact) {\n  if (typeof (ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Alice expects to receive a contract as its first argument.`));\n  }\n  if (typeof (interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Alice expects to receive an interact object as its second argument.`));\n  }\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Null;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc3 = stdlib.T_Digest;\n  const ctc4 = stdlib.T_Address;\n\n\n  const v435 = stdlib.protect(ctc0, interact.wager, 'for Alice\\'s interact field wager');\n\n  const txn1 = await (ctc.sendrecv({\n    args: [v435],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:88:9:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [v435, []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n      const { data: [v439], secs: v441, time: v440, didSend: v67, from: v438 } = txn1;\n\n      sim_r.txns.push({\n        amt: v439,\n        kind: 'to',\n        tok: undefined\n      });\n      const v445 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n      sim_r.isHalt = false;\n\n      return sim_r;\n    }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n  }));\n  const { data: [v439], secs: v441, time: v440, didSend: v67, from: v438 } = txn1;\n  ;\n  const v445 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n  const txn2 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 0,\n    funcNum: 1,\n    out_tys: [],\n    timeoutAt: ['time', v445],\n    waitIfNotPresent: false\n  }));\n  if (txn2.didTimeout) {\n    const txn3 = await (ctc.sendrecv({\n      args: [v438, v439, v445],\n      evt_cnt: 0,\n      funcNum: 2,\n      lct: v440,\n      onlyIf: true,\n      out_tys: [],\n      pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn3) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n        const { data: [], secs: v701, time: v700, didSend: v388, from: v699 } = txn3;\n\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const v703 = stdlib.addressEq(v438, v699);\n        stdlib.assert(v703, {\n          at: 'reach standard library:206:7:dot',\n          fs: ['at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n          msg: 'sender correct',\n          who: 'Alice'\n        });\n        sim_r.txns.push({\n          amt: v439,\n          kind: 'from',\n          to: v438,\n          tok: undefined\n        });\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n        })\n        sim_r.isHalt = true;\n\n        return sim_r;\n      }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc4, ctc0, ctc0],\n      waitIfNotPresent: false\n    }));\n    const { data: [], secs: v701, time: v700, didSend: v388, from: v699 } = txn3;\n    ;\n    const v703 = stdlib.addressEq(v438, v699);\n    stdlib.assert(v703, {\n      at: 'reach standard library:206:7:dot',\n      fs: ['at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n      msg: 'sender correct',\n      who: 'Alice'\n    });\n    ;\n    stdlib.protect(ctc1, await interact.informTimeout(), {\n      at: './index.rsh:85:35:application',\n      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n      msg: 'informTimeout',\n      who: 'Alice'\n    });\n\n    return;\n\n  }\n  else {\n    const { data: [], secs: v451, time: v450, didSend: v76, from: v449 } = txn2;\n    const v453 = stdlib.add(v439, v439);\n    ;\n    let v454 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n    let v455 = v450;\n    let v461 = v453;\n\n    while (await (async () => {\n      const v469 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n\n      return v469;\n    })()) {\n      const v471 = stdlib.add(v455, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n      const v475 = stdlib.protect(ctc0, await interact.getFingers(), {\n        at: './index.rsh:103:48:application',\n        fs: ['at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'getFingers',\n        who: 'Alice'\n      });\n      const v476 = stdlib.protect(ctc0, await interact.getGuess(v475), {\n        at: './index.rsh:104:44:application',\n        fs: ['at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'getGuess',\n        who: 'Alice'\n      });\n      stdlib.protect(ctc1, await interact.log(v475), {\n        at: './index.rsh:106:23:application',\n        fs: ['at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'log',\n        who: 'Alice'\n      });\n      const v477 = stdlib.protect(ctc0, await interact.random(), {\n        at: 'reach standard library:57:31:application',\n        fs: ['at ./index.rsh:111:52:application call to \"makeCommitment\" (defined at: reach standard library:56:8:function exp)', 'at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'random',\n        who: 'Alice'\n      });\n      const v478 = stdlib.digest(ctc2, [v477, v475]);\n      const v480 = stdlib.protect(ctc0, await interact.random(), {\n        at: 'reach standard library:57:31:application',\n        fs: ['at ./index.rsh:113:62:application call to \"makeCommitment\" (defined at: reach standard library:56:8:function exp)', 'at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'random',\n        who: 'Alice'\n      });\n      const v481 = stdlib.digest(ctc2, [v480, v476]);\n\n      const txn3 = await (ctc.sendrecv({\n        args: [v438, v439, v449, v461, v471, v478],\n        evt_cnt: 1,\n        funcNum: 4,\n        lct: v455,\n        onlyIf: true,\n        out_tys: [ctc3],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n          const { data: [v484], secs: v486, time: v485, didSend: v108, from: v483 } = txn3;\n\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          const v488 = stdlib.addressEq(v438, v483);\n          stdlib.assert(v488, {\n            at: './index.rsh:117:11:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Alice'\n          });\n          const v490 = stdlib.add(v485, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n          sim_r.isHalt = false;\n\n          return sim_r;\n        }),\n        soloSend: true,\n        timeoutAt: ['time', v471],\n        tys: [ctc4, ctc0, ctc4, ctc0, ctc0, ctc3],\n        waitIfNotPresent: false\n      }));\n      if (txn3.didTimeout) {\n        const txn4 = await (ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 5,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n        }));\n        const { data: [], secs: v668, time: v667, didSend: v344, from: v666 } = txn4;\n        ;\n        const v670 = stdlib.addressEq(v449, v666);\n        stdlib.assert(v670, {\n          at: 'reach standard library:206:7:dot',\n          fs: ['at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n          msg: 'sender correct',\n          who: 'Alice'\n        });\n        ;\n        stdlib.protect(ctc1, await interact.informTimeout(), {\n          at: './index.rsh:85:35:application',\n          fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n          msg: 'informTimeout',\n          who: 'Alice'\n        });\n\n        return;\n\n      }\n      else {\n        const { data: [v484], secs: v486, time: v485, didSend: v108, from: v483 } = txn3;\n        ;\n        const v488 = stdlib.addressEq(v438, v483);\n        stdlib.assert(v488, {\n          at: './index.rsh:117:11:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Alice'\n        });\n        const v490 = stdlib.add(v485, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n        const txn4 = await (ctc.sendrecv({\n          args: [v438, v439, v449, v461, v484, v490, v481],\n          evt_cnt: 1,\n          funcNum: 6,\n          lct: v485,\n          onlyIf: true,\n          out_tys: [ctc3],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n            const { data: [v493], secs: v495, time: v494, didSend: v115, from: v492 } = txn4;\n\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const v497 = stdlib.addressEq(v438, v492);\n            stdlib.assert(v497, {\n              at: './index.rsh:121:11:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Alice'\n            });\n            const v499 = stdlib.add(v494, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n            sim_r.isHalt = false;\n\n            return sim_r;\n          }),\n          soloSend: true,\n          timeoutAt: ['time', v490],\n          tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc0, ctc3],\n          waitIfNotPresent: false\n        }));\n        if (txn4.didTimeout) {\n          const txn5 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 7,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n          }));\n          const { data: [], secs: v651, time: v650, didSend: v318, from: v649 } = txn5;\n          ;\n          const v653 = stdlib.addressEq(v449, v649);\n          stdlib.assert(v653, {\n            at: 'reach standard library:206:7:dot',\n            fs: ['at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n            msg: 'sender correct',\n            who: 'Alice'\n          });\n          ;\n          stdlib.protect(ctc1, await interact.informTimeout(), {\n            at: './index.rsh:85:35:application',\n            fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n            msg: 'informTimeout',\n            who: 'Alice'\n          });\n\n          return;\n\n        }\n        else {\n          const { data: [v493], secs: v495, time: v494, didSend: v115, from: v492 } = txn4;\n          ;\n          const v497 = stdlib.addressEq(v438, v492);\n          stdlib.assert(v497, {\n            at: './index.rsh:121:11:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Alice'\n          });\n          const v499 = stdlib.add(v494, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n          const txn5 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 1,\n            funcNum: 8,\n            out_tys: [ctc0],\n            timeoutAt: ['time', v499],\n            waitIfNotPresent: false\n          }));\n          if (txn5.didTimeout) {\n            const txn6 = await (ctc.sendrecv({\n              args: [v438, v439, v449, v461, v484, v493, v499],\n              evt_cnt: 0,\n              funcNum: 9,\n              lct: v494,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn6) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                const { data: [], secs: v634, time: v633, didSend: v292, from: v632 } = txn6;\n\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v636 = stdlib.addressEq(v438, v632);\n                stdlib.assert(v636, {\n                  at: 'reach standard library:206:7:dot',\n                  fs: ['at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                  msg: 'sender correct',\n                  who: 'Alice'\n                });\n                sim_r.txns.push({\n                  amt: v461,\n                  kind: 'from',\n                  to: v438,\n                  tok: undefined\n                });\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                })\n                sim_r.isHalt = true;\n\n                return sim_r;\n              }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc3, ctc0],\n              waitIfNotPresent: false\n            }));\n            const { data: [], secs: v634, time: v633, didSend: v292, from: v632 } = txn6;\n            ;\n            const v636 = stdlib.addressEq(v438, v632);\n            stdlib.assert(v636, {\n              at: 'reach standard library:206:7:dot',\n              fs: ['at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n              msg: 'sender correct',\n              who: 'Alice'\n            });\n            ;\n            stdlib.protect(ctc1, await interact.informTimeout(), {\n              at: './index.rsh:85:35:application',\n              fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n              msg: 'informTimeout',\n              who: 'Alice'\n            });\n\n            return;\n\n          }\n          else {\n            const { data: [v506], secs: v508, time: v507, didSend: v127, from: v505 } = txn5;\n            ;\n            const v510 = stdlib.addressEq(v449, v505);\n            stdlib.assert(v510, {\n              at: './index.rsh:140:11:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Alice'\n            });\n            const v512 = stdlib.add(v507, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n            const txn6 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 1,\n              funcNum: 10,\n              out_tys: [ctc0],\n              timeoutAt: ['time', v512],\n              waitIfNotPresent: false\n            }));\n            if (txn6.didTimeout) {\n              const txn7 = await (ctc.sendrecv({\n                args: [v438, v439, v449, v461, v484, v493, v506, v512],\n                evt_cnt: 0,\n                funcNum: 11,\n                lct: v507,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn7) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                  const { data: [], secs: v617, time: v616, didSend: v266, from: v615 } = txn7;\n\n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                  });\n                  const v619 = stdlib.addressEq(v438, v615);\n                  stdlib.assert(v619, {\n                    at: 'reach standard library:206:7:dot',\n                    fs: ['at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                  });\n                  sim_r.txns.push({\n                    amt: v461,\n                    kind: 'from',\n                    to: v438,\n                    tok: undefined\n                  });\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  })\n                  sim_r.isHalt = true;\n\n                  return sim_r;\n                }),\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc3, ctc0, ctc0],\n                waitIfNotPresent: false\n              }));\n              const { data: [], secs: v617, time: v616, didSend: v266, from: v615 } = txn7;\n              ;\n              const v619 = stdlib.addressEq(v438, v615);\n              stdlib.assert(v619, {\n                at: 'reach standard library:206:7:dot',\n                fs: ['at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                msg: 'sender correct',\n                who: 'Alice'\n              });\n              ;\n              stdlib.protect(ctc1, await interact.informTimeout(), {\n                at: './index.rsh:85:35:application',\n                fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                msg: 'informTimeout',\n                who: 'Alice'\n              });\n\n              return;\n\n            }\n            else {\n              const { data: [v515], secs: v517, time: v516, didSend: v134, from: v514 } = txn6;\n              ;\n              const v519 = stdlib.addressEq(v449, v514);\n              stdlib.assert(v519, {\n                at: './index.rsh:143:11:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Alice'\n              });\n              const v521 = stdlib.add(v516, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n              const txn7 = await (ctc.sendrecv({\n                args: [v438, v439, v449, v461, v484, v493, v506, v515, v521, v477, v475],\n                evt_cnt: 2,\n                funcNum: 12,\n                lct: v516,\n                onlyIf: true,\n                out_tys: [ctc0, ctc0],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn7) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                  const { data: [v526, v527], secs: v529, time: v528, didSend: v145, from: v525 } = txn7;\n\n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                  });\n                  const v531 = stdlib.addressEq(v438, v525);\n                  stdlib.assert(v531, {\n                    at: './index.rsh:154:11:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                  });\n                  const v532 = stdlib.digest(ctc2, [v526, v527]);\n                  const v533 = stdlib.digestEq(v484, v532);\n                  stdlib.assert(v533, {\n                    at: 'reach standard library:62:17:application',\n                    fs: ['at ./index.rsh:157:24:application call to \"checkCommitment\" (defined at: reach standard library:61:8:function exp)'],\n                    msg: null,\n                    who: 'Alice'\n                  });\n                  const v535 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                  sim_r.isHalt = false;\n\n                  return sim_r;\n                }),\n                soloSend: true,\n                timeoutAt: ['time', v521],\n                tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc3, ctc0, ctc0, ctc0, ctc0, ctc0],\n                waitIfNotPresent: false\n              }));\n              if (txn7.didTimeout) {\n                const txn8 = await (ctc.recv({\n                  didSend: false,\n                  evt_cnt: 0,\n                  funcNum: 13,\n                  out_tys: [],\n                  timeoutAt: undefined,\n                  waitIfNotPresent: false\n                }));\n                const { data: [], secs: v600, time: v599, didSend: v240, from: v598 } = txn8;\n                ;\n                const v602 = stdlib.addressEq(v449, v598);\n                stdlib.assert(v602, {\n                  at: 'reach standard library:206:7:dot',\n                  fs: ['at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                  msg: 'sender correct',\n                  who: 'Alice'\n                });\n                ;\n                stdlib.protect(ctc1, await interact.informTimeout(), {\n                  at: './index.rsh:85:35:application',\n                  fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                  msg: 'informTimeout',\n                  who: 'Alice'\n                });\n\n                return;\n\n              }\n              else {\n                const { data: [v526, v527], secs: v529, time: v528, didSend: v145, from: v525 } = txn7;\n                ;\n                const v531 = stdlib.addressEq(v438, v525);\n                stdlib.assert(v531, {\n                  at: './index.rsh:154:11:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Alice'\n                });\n                const v532 = stdlib.digest(ctc2, [v526, v527]);\n                const v533 = stdlib.digestEq(v484, v532);\n                stdlib.assert(v533, {\n                  at: 'reach standard library:62:17:application',\n                  fs: ['at ./index.rsh:157:24:application call to \"checkCommitment\" (defined at: reach standard library:61:8:function exp)'],\n                  msg: null,\n                  who: 'Alice'\n                });\n                const v535 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                const txn8 = await (ctc.sendrecv({\n                  args: [v438, v439, v449, v461, v493, v506, v515, v527, v535, v480, v476],\n                  evt_cnt: 2,\n                  funcNum: 14,\n                  lct: v528,\n                  onlyIf: true,\n                  out_tys: [ctc0, ctc0],\n                  pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n                  sim_p: (async (txn8) => {\n                    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                    const { data: [v538, v539], secs: v541, time: v540, didSend: v156, from: v537 } = txn8;\n\n                    sim_r.txns.push({\n                      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                      kind: 'to',\n                      tok: undefined\n                    });\n                    const v543 = stdlib.addressEq(v438, v537);\n                    stdlib.assert(v543, {\n                      at: './index.rsh:160:11:dot',\n                      fs: [],\n                      msg: 'sender correct',\n                      who: 'Alice'\n                    });\n                    const v544 = stdlib.digest(ctc2, [v538, v539]);\n                    const v545 = stdlib.digestEq(v493, v544);\n                    stdlib.assert(v545, {\n                      at: 'reach standard library:62:17:application',\n                      fs: ['at ./index.rsh:162:24:application call to \"checkCommitment\" (defined at: reach standard library:61:8:function exp)'],\n                      msg: null,\n                      who: 'Alice'\n                    });\n                    const v547 = stdlib.add(v540, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                    sim_r.isHalt = false;\n\n                    return sim_r;\n                  }),\n                  soloSend: true,\n                  timeoutAt: ['time', v535],\n                  tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0],\n                  waitIfNotPresent: false\n                }));\n                if (txn8.didTimeout) {\n                  const txn9 = await (ctc.recv({\n                    didSend: false,\n                    evt_cnt: 0,\n                    funcNum: 15,\n                    out_tys: [],\n                    timeoutAt: undefined,\n                    waitIfNotPresent: false\n                  }));\n                  const { data: [], secs: v583, time: v582, didSend: v214, from: v581 } = txn9;\n                  ;\n                  const v585 = stdlib.addressEq(v449, v581);\n                  stdlib.assert(v585, {\n                    at: 'reach standard library:206:7:dot',\n                    fs: ['at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                  });\n                  ;\n                  stdlib.protect(ctc1, await interact.informTimeout(), {\n                    at: './index.rsh:85:35:application',\n                    fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                    msg: 'informTimeout',\n                    who: 'Alice'\n                  });\n\n                  return;\n\n                }\n                else {\n                  const { data: [v538, v539], secs: v541, time: v540, didSend: v156, from: v537 } = txn8;\n                  ;\n                  const v543 = stdlib.addressEq(v438, v537);\n                  stdlib.assert(v543, {\n                    at: './index.rsh:160:11:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                  });\n                  const v544 = stdlib.digest(ctc2, [v538, v539]);\n                  const v545 = stdlib.digestEq(v493, v544);\n                  stdlib.assert(v545, {\n                    at: 'reach standard library:62:17:application',\n                    fs: ['at ./index.rsh:162:24:application call to \"checkCommitment\" (defined at: reach standard library:61:8:function exp)'],\n                    msg: null,\n                    who: 'Alice'\n                  });\n                  const v547 = stdlib.add(v540, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                  const v551 = stdlib.add(v527, v506);\n                  stdlib.protect(ctc1, await interact.seeWinning(v551), {\n                    at: './index.rsh:168:30:application',\n                    fs: ['at ./index.rsh:166:15:application call to [unknown function] (defined at: ./index.rsh:166:19:function exp)'],\n                    msg: 'seeWinning',\n                    who: 'Alice'\n                  });\n\n                  const txn9 = await (ctc.sendrecv({\n                    args: [v438, v439, v449, v461, v506, v515, v527, v539, v547, v551],\n                    evt_cnt: 1,\n                    funcNum: 16,\n                    lct: v540,\n                    onlyIf: true,\n                    out_tys: [ctc0],\n                    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n                    sim_p: (async (txn9) => {\n                      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                      const { data: [v553], secs: v555, time: v554, didSend: v170, from: v552 } = txn9;\n\n                      sim_r.txns.push({\n                        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                        kind: 'to',\n                        tok: undefined\n                      });\n                      const v557 = stdlib.addressEq(v438, v552);\n                      stdlib.assert(v557, {\n                        at: './index.rsh:171:11:dot',\n                        fs: [],\n                        msg: 'sender correct',\n                        who: 'Alice'\n                      });\n                      let v558;\n                      const v559 = stdlib.eq(v539, v515);\n                      if (v559) {\n                        v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                      }\n                      else {\n                        const v561 = stdlib.eq(v551, v539);\n                        if (v561) {\n                          v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2);\n                        }\n                        else {\n                          const v563 = stdlib.eq(v551, v515);\n                          if (v563) {\n                            v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0);\n                          }\n                          else {\n                            v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                          }\n                        }\n                      }\n                      const cv454 = v558;\n                      const cv455 = v554;\n                      const cv461 = v461;\n\n                      await (async () => {\n                        const v454 = cv454;\n                        const v455 = cv455;\n                        const v461 = cv461;\n\n                        if (await (async () => {\n                          const v469 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n\n                          return v469;\n                        })()) {\n                          const v471 = stdlib.add(v455, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                          sim_r.isHalt = false;\n                        }\n                        else {\n                          const v683 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n                          const v686 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v439);\n                          const v688 = v683 ? v438 : v449;\n                          sim_r.txns.push({\n                            amt: v686,\n                            kind: 'from',\n                            to: v688,\n                            tok: undefined\n                          });\n                          sim_r.txns.push({\n                            kind: 'halt',\n                            tok: undefined\n                          })\n                          sim_r.isHalt = true;\n                        }\n                      })();\n                      return sim_r;\n                    }),\n                    soloSend: true,\n                    timeoutAt: ['time', v547],\n                    tys: [ctc4, ctc0, ctc4, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0],\n                    waitIfNotPresent: false\n                  }));\n                  if (txn9.didTimeout) {\n                    const txn10 = await (ctc.sendrecv({\n                      args: [v438, v439, v449, v461, v506, v515, v527, v539, v547],\n                      evt_cnt: 0,\n                      funcNum: 17,\n                      lct: v540,\n                      onlyIf: true,\n                      out_tys: [],\n                      pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                      sim_p: (async (txn10) => {\n                        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                        const { data: [], secs: v566, time: v565, didSend: v188, from: v564 } = txn10;\n\n                        sim_r.txns.push({\n                          amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                          kind: 'to',\n                          tok: undefined\n                        });\n                        const v568 = stdlib.addressEq(v438, v564);\n                        stdlib.assert(v568, {\n                          at: 'reach standard library:206:7:dot',\n                          fs: ['at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                          msg: 'sender correct',\n                          who: 'Alice'\n                        });\n                        sim_r.txns.push({\n                          amt: v461,\n                          kind: 'from',\n                          to: v438,\n                          tok: undefined\n                        });\n                        sim_r.txns.push({\n                          kind: 'halt',\n                          tok: undefined\n                        })\n                        sim_r.isHalt = true;\n\n                        return sim_r;\n                      }),\n                      soloSend: true,\n                      timeoutAt: undefined,\n                      tys: [ctc4, ctc0, ctc4, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0],\n                      waitIfNotPresent: false\n                    }));\n                    const { data: [], secs: v566, time: v565, didSend: v188, from: v564 } = txn10;\n                    ;\n                    const v568 = stdlib.addressEq(v438, v564);\n                    stdlib.assert(v568, {\n                      at: 'reach standard library:206:7:dot',\n                      fs: ['at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                      msg: 'sender correct',\n                      who: 'Alice'\n                    });\n                    ;\n                    stdlib.protect(ctc1, await interact.informTimeout(), {\n                      at: './index.rsh:85:35:application',\n                      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                      msg: 'informTimeout',\n                      who: 'Alice'\n                    });\n\n                    return;\n\n                  }\n                  else {\n                    const { data: [v553], secs: v555, time: v554, didSend: v170, from: v552 } = txn9;\n                    ;\n                    const v557 = stdlib.addressEq(v438, v552);\n                    stdlib.assert(v557, {\n                      at: './index.rsh:171:11:dot',\n                      fs: [],\n                      msg: 'sender correct',\n                      who: 'Alice'\n                    });\n                    let v558;\n                    const v559 = stdlib.eq(v539, v515);\n                    if (v559) {\n                      v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                    }\n                    else {\n                      const v561 = stdlib.eq(v551, v539);\n                      if (v561) {\n                        v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2);\n                      }\n                      else {\n                        const v563 = stdlib.eq(v551, v515);\n                        if (v563) {\n                          v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0);\n                        }\n                        else {\n                          v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                        }\n                      }\n                    }\n                    const cv454 = v558;\n                    const cv455 = v554;\n                    const cv461 = v461;\n\n                    v454 = cv454;\n                    v455 = cv455;\n                    v461 = cv461;\n\n                    continue;\n                  }\n\n                }\n\n              }\n\n            }\n\n          }\n\n        }\n\n      }\n\n    }\n    const v683 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n    const v686 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v439);\n    const v688 = v683 ? v438 : v449;\n    ;\n    stdlib.protect(ctc1, await interact.seeOutcome(v454), {\n      at: './index.rsh:185:28:application',\n      fs: ['at ./index.rsh:184:11:application call to [unknown function] (defined at: ./index.rsh:184:23:function exp)'],\n      msg: 'seeOutcome',\n      who: 'Alice'\n    });\n\n    return;\n  }\n\n\n\n};\nexport async function Bob(ctcTop, interact) {\n  if (typeof (ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Bob expects to receive a contract as its first argument.`));\n  }\n  if (typeof (interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Bob expects to receive an interact object as its second argument.`));\n  }\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Null;\n  const ctc2 = stdlib.T_Digest;\n  const ctc3 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc4 = stdlib.T_Address;\n\n\n  const txn1 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  }));\n  const { data: [v439], secs: v441, time: v440, didSend: v67, from: v438 } = txn1;\n  ;\n  const v445 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n  stdlib.protect(ctc1, await interact.acceptWager(v439), {\n    at: './index.rsh:93:29:application',\n    fs: ['at ./index.rsh:92:13:application call to [unknown function] (defined at: ./index.rsh:92:17:function exp)'],\n    msg: 'acceptWager',\n    who: 'Bob'\n  });\n\n  const txn2 = await (ctc.sendrecv({\n    args: [v438, v439, v445],\n    evt_cnt: 0,\n    funcNum: 1,\n    lct: v440,\n    onlyIf: true,\n    out_tys: [],\n    pay: [v439, []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n      const { data: [], secs: v451, time: v450, didSend: v76, from: v449 } = txn2;\n\n      const v453 = stdlib.add(v439, v439);\n      sim_r.txns.push({\n        amt: v439,\n        kind: 'to',\n        tok: undefined\n      });\n      const v454 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n      const v455 = v450;\n      const v461 = v453;\n\n      if (await (async () => {\n        const v469 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n\n        return v469;\n      })()) {\n        const v471 = stdlib.add(v455, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n        sim_r.isHalt = false;\n      }\n      else {\n        const v683 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n        const v686 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v439);\n        const v688 = v683 ? v438 : v449;\n        sim_r.txns.push({\n          amt: v686,\n          kind: 'from',\n          to: v688,\n          tok: undefined\n        });\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n        })\n        sim_r.isHalt = true;\n      }\n      return sim_r;\n    }),\n    soloSend: true,\n    timeoutAt: ['time', v445],\n    tys: [ctc4, ctc0, ctc0],\n    waitIfNotPresent: false\n  }));\n  if (txn2.didTimeout) {\n    const txn3 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 2,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n    }));\n    const { data: [], secs: v701, time: v700, didSend: v388, from: v699 } = txn3;\n    ;\n    const v703 = stdlib.addressEq(v438, v699);\n    stdlib.assert(v703, {\n      at: 'reach standard library:206:7:dot',\n      fs: ['at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n      msg: 'sender correct',\n      who: 'Bob'\n    });\n    ;\n    stdlib.protect(ctc1, await interact.informTimeout(), {\n      at: './index.rsh:85:35:application',\n      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n      msg: 'informTimeout',\n      who: 'Bob'\n    });\n\n    return;\n\n  }\n  else {\n    const { data: [], secs: v451, time: v450, didSend: v76, from: v449 } = txn2;\n    const v453 = stdlib.add(v439, v439);\n    ;\n    let v454 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n    let v455 = v450;\n    let v461 = v453;\n\n    while (await (async () => {\n      const v469 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n\n      return v469;\n    })()) {\n      const v471 = stdlib.add(v455, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n      const txn3 = await (ctc.recv({\n        didSend: false,\n        evt_cnt: 1,\n        funcNum: 4,\n        out_tys: [ctc2],\n        timeoutAt: ['time', v471],\n        waitIfNotPresent: false\n      }));\n      if (txn3.didTimeout) {\n        const txn4 = await (ctc.sendrecv({\n          args: [v438, v439, v449, v461, v471],\n          evt_cnt: 0,\n          funcNum: 5,\n          lct: v455,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n            const { data: [], secs: v668, time: v667, didSend: v344, from: v666 } = txn4;\n\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const v670 = stdlib.addressEq(v449, v666);\n            stdlib.assert(v670, {\n              at: 'reach standard library:206:7:dot',\n              fs: ['at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n              msg: 'sender correct',\n              who: 'Bob'\n            });\n            sim_r.txns.push({\n              amt: v461,\n              kind: 'from',\n              to: v449,\n              tok: undefined\n            });\n            sim_r.txns.push({\n              kind: 'halt',\n              tok: undefined\n            })\n            sim_r.isHalt = true;\n\n            return sim_r;\n          }),\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc4, ctc0, ctc4, ctc0, ctc0],\n          waitIfNotPresent: false\n        }));\n        const { data: [], secs: v668, time: v667, didSend: v344, from: v666 } = txn4;\n        ;\n        const v670 = stdlib.addressEq(v449, v666);\n        stdlib.assert(v670, {\n          at: 'reach standard library:206:7:dot',\n          fs: ['at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n          msg: 'sender correct',\n          who: 'Bob'\n        });\n        ;\n        stdlib.protect(ctc1, await interact.informTimeout(), {\n          at: './index.rsh:85:35:application',\n          fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n          msg: 'informTimeout',\n          who: 'Bob'\n        });\n\n        return;\n\n      }\n      else {\n        const { data: [v484], secs: v486, time: v485, didSend: v108, from: v483 } = txn3;\n        ;\n        const v488 = stdlib.addressEq(v438, v483);\n        stdlib.assert(v488, {\n          at: './index.rsh:117:11:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Bob'\n        });\n        const v490 = stdlib.add(v485, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n        const txn4 = await (ctc.recv({\n          didSend: false,\n          evt_cnt: 1,\n          funcNum: 6,\n          out_tys: [ctc2],\n          timeoutAt: ['time', v490],\n          waitIfNotPresent: false\n        }));\n        if (txn4.didTimeout) {\n          const txn5 = await (ctc.sendrecv({\n            args: [v438, v439, v449, v461, v484, v490],\n            evt_cnt: 0,\n            funcNum: 7,\n            lct: v485,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn5) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n              const { data: [], secs: v651, time: v650, didSend: v318, from: v649 } = txn5;\n\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v653 = stdlib.addressEq(v449, v649);\n              stdlib.assert(v653, {\n                at: 'reach standard library:206:7:dot',\n                fs: ['at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                msg: 'sender correct',\n                who: 'Bob'\n              });\n              sim_r.txns.push({\n                amt: v461,\n                kind: 'from',\n                to: v449,\n                tok: undefined\n              });\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              })\n              sim_r.isHalt = true;\n\n              return sim_r;\n            }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc0],\n            waitIfNotPresent: false\n          }));\n          const { data: [], secs: v651, time: v650, didSend: v318, from: v649 } = txn5;\n          ;\n          const v653 = stdlib.addressEq(v449, v649);\n          stdlib.assert(v653, {\n            at: 'reach standard library:206:7:dot',\n            fs: ['at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n            msg: 'sender correct',\n            who: 'Bob'\n          });\n          ;\n          stdlib.protect(ctc1, await interact.informTimeout(), {\n            at: './index.rsh:85:35:application',\n            fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n            msg: 'informTimeout',\n            who: 'Bob'\n          });\n\n          return;\n\n        }\n        else {\n          const { data: [v493], secs: v495, time: v494, didSend: v115, from: v492 } = txn4;\n          ;\n          const v497 = stdlib.addressEq(v438, v492);\n          stdlib.assert(v497, {\n            at: './index.rsh:121:11:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Bob'\n          });\n          const v499 = stdlib.add(v494, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n          const v503 = stdlib.protect(ctc0, await interact.getFingers(), {\n            at: './index.rsh:131:48:application',\n            fs: ['at ./index.rsh:129:15:application call to [unknown function] (defined at: ./index.rsh:129:19:function exp)'],\n            msg: 'getFingers',\n            who: 'Bob'\n          });\n          const v504 = stdlib.protect(ctc0, await interact.getGuess(v503), {\n            at: './index.rsh:133:44:application',\n            fs: ['at ./index.rsh:129:15:application call to [unknown function] (defined at: ./index.rsh:129:19:function exp)'],\n            msg: 'getGuess',\n            who: 'Bob'\n          });\n\n          const txn5 = await (ctc.sendrecv({\n            args: [v438, v439, v449, v461, v484, v493, v499, v503],\n            evt_cnt: 1,\n            funcNum: 8,\n            lct: v494,\n            onlyIf: true,\n            out_tys: [ctc0],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn5) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n              const { data: [v506], secs: v508, time: v507, didSend: v127, from: v505 } = txn5;\n\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v510 = stdlib.addressEq(v449, v505);\n              stdlib.assert(v510, {\n                at: './index.rsh:140:11:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Bob'\n              });\n              const v512 = stdlib.add(v507, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n              sim_r.isHalt = false;\n\n              return sim_r;\n            }),\n            soloSend: true,\n            timeoutAt: ['time', v499],\n            tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc2, ctc0, ctc0],\n            waitIfNotPresent: false\n          }));\n          if (txn5.didTimeout) {\n            const txn6 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 9,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            }));\n            const { data: [], secs: v634, time: v633, didSend: v292, from: v632 } = txn6;\n            ;\n            const v636 = stdlib.addressEq(v438, v632);\n            stdlib.assert(v636, {\n              at: 'reach standard library:206:7:dot',\n              fs: ['at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n              msg: 'sender correct',\n              who: 'Bob'\n            });\n            ;\n            stdlib.protect(ctc1, await interact.informTimeout(), {\n              at: './index.rsh:85:35:application',\n              fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n              msg: 'informTimeout',\n              who: 'Bob'\n            });\n\n            return;\n\n          }\n          else {\n            const { data: [v506], secs: v508, time: v507, didSend: v127, from: v505 } = txn5;\n            ;\n            const v510 = stdlib.addressEq(v449, v505);\n            stdlib.assert(v510, {\n              at: './index.rsh:140:11:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Bob'\n            });\n            const v512 = stdlib.add(v507, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n            const txn6 = await (ctc.sendrecv({\n              args: [v438, v439, v449, v461, v484, v493, v506, v512, v504],\n              evt_cnt: 1,\n              funcNum: 10,\n              lct: v507,\n              onlyIf: true,\n              out_tys: [ctc0],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn6) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                const { data: [v515], secs: v517, time: v516, didSend: v134, from: v514 } = txn6;\n\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v519 = stdlib.addressEq(v449, v514);\n                stdlib.assert(v519, {\n                  at: './index.rsh:143:11:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Bob'\n                });\n                const v521 = stdlib.add(v516, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                sim_r.isHalt = false;\n\n                return sim_r;\n              }),\n              soloSend: true,\n              timeoutAt: ['time', v512],\n              tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc2, ctc0, ctc0, ctc0],\n              waitIfNotPresent: false\n            }));\n            if (txn6.didTimeout) {\n              const txn7 = await (ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 11,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n              }));\n              const { data: [], secs: v617, time: v616, didSend: v266, from: v615 } = txn7;\n              ;\n              const v619 = stdlib.addressEq(v438, v615);\n              stdlib.assert(v619, {\n                at: 'reach standard library:206:7:dot',\n                fs: ['at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                msg: 'sender correct',\n                who: 'Bob'\n              });\n              ;\n              stdlib.protect(ctc1, await interact.informTimeout(), {\n                at: './index.rsh:85:35:application',\n                fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                msg: 'informTimeout',\n                who: 'Bob'\n              });\n\n              return;\n\n            }\n            else {\n              const { data: [v515], secs: v517, time: v516, didSend: v134, from: v514 } = txn6;\n              ;\n              const v519 = stdlib.addressEq(v449, v514);\n              stdlib.assert(v519, {\n                at: './index.rsh:143:11:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Bob'\n              });\n              const v521 = stdlib.add(v516, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n              const txn7 = await (ctc.recv({\n                didSend: false,\n                evt_cnt: 2,\n                funcNum: 12,\n                out_tys: [ctc0, ctc0],\n                timeoutAt: ['time', v521],\n                waitIfNotPresent: false\n              }));\n              if (txn7.didTimeout) {\n                const txn8 = await (ctc.sendrecv({\n                  args: [v438, v439, v449, v461, v484, v493, v506, v515, v521],\n                  evt_cnt: 0,\n                  funcNum: 13,\n                  lct: v516,\n                  onlyIf: true,\n                  out_tys: [],\n                  pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                  sim_p: (async (txn8) => {\n                    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                    const { data: [], secs: v600, time: v599, didSend: v240, from: v598 } = txn8;\n\n                    sim_r.txns.push({\n                      amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                      kind: 'to',\n                      tok: undefined\n                    });\n                    const v602 = stdlib.addressEq(v449, v598);\n                    stdlib.assert(v602, {\n                      at: 'reach standard library:206:7:dot',\n                      fs: ['at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                      msg: 'sender correct',\n                      who: 'Bob'\n                    });\n                    sim_r.txns.push({\n                      amt: v461,\n                      kind: 'from',\n                      to: v449,\n                      tok: undefined\n                    });\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                    })\n                    sim_r.isHalt = true;\n\n                    return sim_r;\n                  }),\n                  soloSend: true,\n                  timeoutAt: undefined,\n                  tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc2, ctc0, ctc0, ctc0],\n                  waitIfNotPresent: false\n                }));\n                const { data: [], secs: v600, time: v599, didSend: v240, from: v598 } = txn8;\n                ;\n                const v602 = stdlib.addressEq(v449, v598);\n                stdlib.assert(v602, {\n                  at: 'reach standard library:206:7:dot',\n                  fs: ['at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                  msg: 'sender correct',\n                  who: 'Bob'\n                });\n                ;\n                stdlib.protect(ctc1, await interact.informTimeout(), {\n                  at: './index.rsh:85:35:application',\n                  fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                  msg: 'informTimeout',\n                  who: 'Bob'\n                });\n\n                return;\n\n              }\n              else {\n                const { data: [v526, v527], secs: v529, time: v528, didSend: v145, from: v525 } = txn7;\n                ;\n                const v531 = stdlib.addressEq(v438, v525);\n                stdlib.assert(v531, {\n                  at: './index.rsh:154:11:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Bob'\n                });\n                const v532 = stdlib.digest(ctc3, [v526, v527]);\n                const v533 = stdlib.digestEq(v484, v532);\n                stdlib.assert(v533, {\n                  at: 'reach standard library:62:17:application',\n                  fs: ['at ./index.rsh:157:24:application call to \"checkCommitment\" (defined at: reach standard library:61:8:function exp)'],\n                  msg: null,\n                  who: 'Bob'\n                });\n                const v535 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                const txn8 = await (ctc.recv({\n                  didSend: false,\n                  evt_cnt: 2,\n                  funcNum: 14,\n                  out_tys: [ctc0, ctc0],\n                  timeoutAt: ['time', v535],\n                  waitIfNotPresent: false\n                }));\n                if (txn8.didTimeout) {\n                  const txn9 = await (ctc.sendrecv({\n                    args: [v438, v439, v449, v461, v493, v506, v515, v527, v535],\n                    evt_cnt: 0,\n                    funcNum: 15,\n                    lct: v528,\n                    onlyIf: true,\n                    out_tys: [],\n                    pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                    sim_p: (async (txn9) => {\n                      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n\n                      const { data: [], secs: v583, time: v582, didSend: v214, from: v581 } = txn9;\n\n                      sim_r.txns.push({\n                        amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                        kind: 'to',\n                        tok: undefined\n                      });\n                      const v585 = stdlib.addressEq(v449, v581);\n                      stdlib.assert(v585, {\n                        at: 'reach standard library:206:7:dot',\n                        fs: ['at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                        msg: 'sender correct',\n                        who: 'Bob'\n                      });\n                      sim_r.txns.push({\n                        amt: v461,\n                        kind: 'from',\n                        to: v449,\n                        tok: undefined\n                      });\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                      })\n                      sim_r.isHalt = true;\n\n                      return sim_r;\n                    }),\n                    soloSend: true,\n                    timeoutAt: undefined,\n                    tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc0, ctc0, ctc0, ctc0],\n                    waitIfNotPresent: false\n                  }));\n                  const { data: [], secs: v583, time: v582, didSend: v214, from: v581 } = txn9;\n                  ;\n                  const v585 = stdlib.addressEq(v449, v581);\n                  stdlib.assert(v585, {\n                    at: 'reach standard library:206:7:dot',\n                    fs: ['at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                    msg: 'sender correct',\n                    who: 'Bob'\n                  });\n                  ;\n                  stdlib.protect(ctc1, await interact.informTimeout(), {\n                    at: './index.rsh:85:35:application',\n                    fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                    msg: 'informTimeout',\n                    who: 'Bob'\n                  });\n\n                  return;\n\n                }\n                else {\n                  const { data: [v538, v539], secs: v541, time: v540, didSend: v156, from: v537 } = txn8;\n                  ;\n                  const v543 = stdlib.addressEq(v438, v537);\n                  stdlib.assert(v543, {\n                    at: './index.rsh:160:11:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Bob'\n                  });\n                  const v544 = stdlib.digest(ctc3, [v538, v539]);\n                  const v545 = stdlib.digestEq(v493, v544);\n                  stdlib.assert(v545, {\n                    at: 'reach standard library:62:17:application',\n                    fs: ['at ./index.rsh:162:24:application call to \"checkCommitment\" (defined at: reach standard library:61:8:function exp)'],\n                    msg: null,\n                    who: 'Bob'\n                  });\n                  const v547 = stdlib.add(v540, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                  const txn9 = await (ctc.recv({\n                    didSend: false,\n                    evt_cnt: 1,\n                    funcNum: 16,\n                    out_tys: [ctc0],\n                    timeoutAt: ['time', v547],\n                    waitIfNotPresent: false\n                  }));\n                  if (txn9.didTimeout) {\n                    const txn10 = await (ctc.recv({\n                      didSend: false,\n                      evt_cnt: 0,\n                      funcNum: 17,\n                      out_tys: [],\n                      timeoutAt: undefined,\n                      waitIfNotPresent: false\n                    }));\n                    const { data: [], secs: v566, time: v565, didSend: v188, from: v564 } = txn10;\n                    ;\n                    const v568 = stdlib.addressEq(v438, v564);\n                    stdlib.assert(v568, {\n                      at: 'reach standard library:206:7:dot',\n                      fs: ['at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                      msg: 'sender correct',\n                      who: 'Bob'\n                    });\n                    ;\n                    stdlib.protect(ctc1, await interact.informTimeout(), {\n                      at: './index.rsh:85:35:application',\n                      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:209:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:204:8:function exp)'],\n                      msg: 'informTimeout',\n                      who: 'Bob'\n                    });\n\n                    return;\n\n                  }\n                  else {\n                    const { data: [v553], secs: v555, time: v554, didSend: v170, from: v552 } = txn9;\n                    ;\n                    const v557 = stdlib.addressEq(v438, v552);\n                    stdlib.assert(v557, {\n                      at: './index.rsh:171:11:dot',\n                      fs: [],\n                      msg: 'sender correct',\n                      who: 'Bob'\n                    });\n                    let v558;\n                    const v559 = stdlib.eq(v539, v515);\n                    if (v559) {\n                      v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                    }\n                    else {\n                      const v560 = stdlib.add(v527, v506);\n                      const v561 = stdlib.eq(v560, v539);\n                      if (v561) {\n                        v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2);\n                      }\n                      else {\n                        const v563 = stdlib.eq(v560, v515);\n                        if (v563) {\n                          v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0);\n                        }\n                        else {\n                          v558 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                        }\n                      }\n                    }\n                    const cv454 = v558;\n                    const cv455 = v554;\n                    const cv461 = v461;\n\n                    v454 = cv454;\n                    v455 = cv455;\n                    v461 = cv461;\n\n                    continue;\n                  }\n\n                }\n\n              }\n\n            }\n\n          }\n\n        }\n\n      }\n\n    }\n    const v683 = stdlib.eq(v454, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n    const v686 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v439);\n    const v688 = v683 ? v438 : v449;\n    ;\n    stdlib.protect(ctc1, await interact.seeOutcome(v454), {\n      at: './index.rsh:185:28:application',\n      fs: ['at ./index.rsh:184:11:application call to [unknown function] (defined at: ./index.rsh:184:23:function exp)'],\n      msg: 'seeOutcome',\n      who: 'Bob'\n    });\n\n    return;\n  }\n\n\n\n};\nexport const _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\nint 8\nextract_uint64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 255\npop\n// \"CheckPay\"\n// \"./index.rsh:88:9:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:88:9:dot\"\n// \"[]\"\nload 255\ndup\nbz l2_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl2_checkTxnK:\npop\nglobal Round\nint 30\n+\nstore 254\ntxn Sender\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l3_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 253\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:94:9:dot\"\n// \"[]\"\nload 254\ndup\nbz l4_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl4_checkTxnK:\npop\nload 255\nload 254\nitob\nconcat\ntxn Sender\nconcat\nbyte base64(AAAAAAAAAAE=)\nglobal Round\nitob\nconcat\nload 254\ndup\n+\nitob\nconcat\nb loopBody3\nl3_afterHandler1:\n// Handler 2\ndup\nint 2\n==\nbz l5_afterHandler2\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 253\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:95:41:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:95:41:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 254\ndup\nbz l6_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 255\nitxn_field Receiver\nitxn_submit\nint 0\nl6_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl7_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl5_afterHandler2:\nl8_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l9_afterHandler4\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 32\n==\nassert\ndup\nstore 250\npop\nglobal Round\nload 251\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:117:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:117:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 249\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 120\napp_global_put\npop\nint 7\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_afterHandler4:\n// Handler 5\ndup\nint 5\n==\nbz l10_afterHandler5\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 251\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:118:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:118:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l11_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 253\nitxn_field Receiver\nitxn_submit\nint 0\nl11_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl12_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl10_afterHandler5:\n// Handler 6\ndup\nint 6\n==\nbz l13_afterHandler6\npop\n// check step\nint 7\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nint 112\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 32\n==\nassert\ndup\nstore 249\npop\nglobal Round\nload 250\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:121:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:121:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 248\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 249\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 127\napp_global_put\nbyte base64(AQ==)\ndig 1\nextract 127 25\napp_global_put\npop\nint 9\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl13_afterHandler6:\n// Handler 7\ndup\nint 7\n==\nbz l14_afterHandler7\npop\n// check step\nint 7\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nint 112\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 250\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:122:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:122:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l15_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 253\nitxn_field Receiver\nitxn_submit\nint 0\nl15_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl16_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl14_afterHandler7:\n// Handler 8\ndup\nint 8\n==\nbz l17_afterHandler8\npop\n// check step\nint 9\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nextract 112 32\nstore 250\ndup\nint 144\nextract_uint64\nstore 249\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 248\npop\nglobal Round\nload 249\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:140:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:140:11:dot\"\n// \"[]\"\nload 253\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 247\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 127\napp_global_put\nbyte base64(AQ==)\ndig 1\nextract 127 33\napp_global_put\npop\nint 11\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl17_afterHandler8:\n// Handler 9\ndup\nint 9\n==\nbz l18_afterHandler9\npop\n// check step\nint 9\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nextract 112 32\nstore 250\ndup\nint 144\nextract_uint64\nstore 249\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 249\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:141:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:141:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 252\ndup\nbz l19_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 255\nitxn_field Receiver\nitxn_submit\nint 0\nl19_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl20_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl18_afterHandler9:\n// Handler 10\ndup\nint 10\n==\nbz l21_afterHandler10\npop\n// check step\nint 11\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nextract 112 32\nstore 250\ndup\nint 144\nextract_uint64\nstore 249\ndup\nint 152\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 247\npop\nglobal Round\nload 248\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:143:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:143:11:dot\"\n// \"[]\"\nload 253\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 246\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 247\nitob\nconcat\nload 246\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 127\napp_global_put\nbyte base64(AQ==)\ndig 1\nextract 127 41\napp_global_put\npop\nint 13\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl21_afterHandler10:\n// Handler 11\ndup\nint 11\n==\nbz l22_afterHandler11\npop\n// check step\nint 11\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nextract 112 32\nstore 250\ndup\nint 144\nextract_uint64\nstore 249\ndup\nint 152\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 248\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:144:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:144:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 252\ndup\nbz l23_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 255\nitxn_field Receiver\nitxn_submit\nint 0\nl23_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl24_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl22_afterHandler11:\n// Handler 12\ndup\nint 12\n==\nbz l25_afterHandler12\npop\n// check step\nint 13\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nextract 112 32\nstore 250\ndup\nint 144\nextract_uint64\nstore 249\ndup\nint 152\nextract_uint64\nstore 248\ndup\nint 160\nextract_uint64\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 16\n==\nassert\ndup\nint 0\nextract_uint64\nstore 246\ndup\nint 8\nextract_uint64\nstore 245\npop\nglobal Round\nload 247\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:154:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:154:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\n// Nothing\n// \"reach standard library:62:17:application\"\n// \"[at ./index.rsh:157:24:application call to \\\"checkCommitment\\\" (defined at: reach standard library:61:8:function exp)]\"\nload 251\nload 246\nitob\nload 245\nitob\nconcat\nsha256\n==\nassert\nglobal Round\nint 30\n+\nstore 244\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 245\nitob\nconcat\nload 244\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 127\napp_global_put\nbyte base64(AQ==)\ndig 1\nextract 127 17\napp_global_put\npop\nint 15\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl25_afterHandler12:\n// Handler 13\ndup\nint 13\n==\nbz l26_afterHandler13\npop\n// check step\nint 13\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nextract 112 32\nstore 250\ndup\nint 144\nextract_uint64\nstore 249\ndup\nint 152\nextract_uint64\nstore 248\ndup\nint 160\nextract_uint64\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 247\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:155:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:155:43:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l27_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 253\nitxn_field Receiver\nitxn_submit\nint 0\nl27_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl28_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl26_afterHandler13:\n// Handler 14\ndup\nint 14\n==\nbz l29_afterHandler14\npop\n// check step\nint 15\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nint 112\nextract_uint64\nstore 250\ndup\nint 120\nextract_uint64\nstore 249\ndup\nint 128\nextract_uint64\nstore 248\ndup\nint 136\nextract_uint64\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 16\n==\nassert\ndup\nint 0\nextract_uint64\nstore 246\ndup\nint 8\nextract_uint64\nstore 245\npop\nglobal Round\nload 247\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:160:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:160:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\n// Nothing\n// \"reach standard library:62:17:application\"\n// \"[at ./index.rsh:162:24:application call to \\\"checkCommitment\\\" (defined at: reach standard library:61:8:function exp)]\"\nload 251\nload 246\nitob\nload 245\nitob\nconcat\nsha256\n==\nassert\nglobal Round\nint 30\n+\nstore 244\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 245\nitob\nconcat\nload 244\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 120\napp_global_put\npop\nint 17\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl29_afterHandler14:\n// Handler 15\ndup\nint 15\n==\nbz l30_afterHandler15\npop\n// check step\nint 15\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\nbyte base64(AQ==)\napp_global_get\nconcat\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nextract 80 32\nstore 251\ndup\nint 112\nextract_uint64\nstore 250\ndup\nint 120\nextract_uint64\nstore 249\ndup\nint 128\nextract_uint64\nstore 248\ndup\nint 136\nextract_uint64\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 247\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:161:41:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:161:41:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l31_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 253\nitxn_field Receiver\nitxn_submit\nint 0\nl31_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl32_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl30_afterHandler15:\n// Handler 16\ndup\nint 16\n==\nbz l33_afterHandler16\npop\n// check step\nint 17\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\ndup\nint 96\nextract_uint64\nstore 249\ndup\nint 104\nextract_uint64\nstore 248\ndup\nint 112\nextract_uint64\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 246\npop\nglobal Round\nload 247\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:171:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:171:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 248\nload 250\n==\nbz l34_localIfF\nint 1\nstore 245\nb l35_localIfK\nl34_localIfF:\nload 249\nload 251\n+\ndup\nstore 244\nload 248\n==\nbz l36_localIfF\nint 2\nstore 245\nb l37_localIfK\nl36_localIfF:\nload 244\nload 250\n==\nbz l38_localIfF\nint 0\nstore 245\nb l39_localIfK\nl38_localIfF:\nint 1\nstore 245\nl39_localIfK:\nl37_localIfK:\nl35_localIfK:\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 245\nitob\nglobal Round\nitob\nconcat\nload 252\nitob\nconcat\nb loopBody3\nl33_afterHandler16:\n// Handler 17\ndup\nint 17\n==\nbz l40_afterHandler17\npop\n// check step\nint 17\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\ndup\nint 96\nextract_uint64\nstore 249\ndup\nint 104\nextract_uint64\nstore 248\ndup\nint 112\nextract_uint64\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 247\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:172:41:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:206:7:dot\"\n// \"[at ./index.rsh:172:41:application call to \\\"closeTo\\\" (defined at: reach standard library:204:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 252\ndup\nbz l41_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 255\nitxn_field Receiver\nitxn_submit\nint 0\nl41_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl42_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl40_afterHandler17:\nint 0\nassert\nloopBody3:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nint 8\nextract_uint64\nstore 254\ndup\nint 16\nextract_uint64\nstore 253\npop\ndup\nextract 0 32\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\ndup\nextract 40 32\nstore 250\npop\nload 255\nint 1\n==\nbz l43_ifF\nload 254\nint 30\n+\nstore 249\nload 252\nload 251\nitob\nconcat\nload 250\nconcat\nload 253\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl43_ifF:\nint 2\nload 251\n*\ndup\nbz l44_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 250\nload 252\nload 255\nint 2\n==\nselect\nitxn_field Receiver\nitxn_submit\nint 0\nl44_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl45_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 2,\n  stateSize: 168,\n  unsupported: [],\n  version: 6\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v439\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v439\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v515\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T20\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v526\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v527\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e12\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e13\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v538\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v539\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e14\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e15\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v553\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e16\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e17\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v484\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v493\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T13\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v506\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v515\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T20\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v526\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v527\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m12\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m13\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v538\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v539\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m14\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m15\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v553\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m16\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m17\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v484\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v493\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T13\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v506\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060405260405162002b6038038062002b608339810160408190526200002691620001ed565b6000808055436003556040805160208101909152908152604080518351815260208085015151908201527fd2fa1fac07e66d08cb46271d2f3a2585d9761d2d591a51cc30a2056942bc38db910160405180910390a16020820151516200009090341460076200011d565b6200009d601e436200028f565b8152604080516060808201835260006020808401828152848601838152338087528984015151835288518252600194859055439094558651928301939093525194810194909452519083015290608001604051602081830303815290604052600290805190602001906200011392919062000147565b50505050620002f3565b81620001435760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b8280546200015590620002b6565b90600052602060002090601f016020900481019282620001795760008555620001c4565b82601f106200019457805160ff1916838001178555620001c4565b82800160010185558215620001c4579182015b82811115620001c4578251825591602001919060010190620001a7565b50620001d2929150620001d6565b5090565b5b80821115620001d25760008155600101620001d7565b60008183036040808212156200020257600080fd5b80518082016001600160401b0380821183831017156200023257634e487b7160e01b600052604160045260246000fd5b818452865183526020601f19860112156200024c57600080fd5b8351945060208501915084821081831117156200027957634e487b7160e01b600052604160045260246000fd5b5090915260209384015182529283015250919050565b60008219821115620002b157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002cb57607f821691505b60208210811415620002ed57634e487b7160e01b600052602260045260246000fd5b50919050565b61285d80620003036000396000f3fe60806040526004361061010c5760003560e01c80638b9fadc81161009a578063ab53f2c611610061578063ab53f2c614610232578063b608682e14610255578063bf2c5b2414610268578063de7369981461027b578063f37e1b9b1461028e57005b80638b9fadc8146101d35780638e314769146101e6578063980b6eac146101f95780639f2518101461020c578063a209ad4e1461021f57005b80633a3e43b0116100de5780633a3e43b0146101725780635471c5a81461018557806379b8ead7146101985780637eea518c146101ab57806383230757146101be57005b80631e93b0f11461011557806329bdceb9146101395780632c10a1591461014c5780633a31ddbd1461015f57005b3661011357005b005b34801561012157600080fd5b506003545b6040519081526020015b60405180910390f35b610113610147366004612257565b6102a1565b61011361015a366004612257565b610539565b61011361016d366004612257565b6106c2565b61011361018036600461228c565b61085e565b610113610193366004612257565b610ace565b6101136101a636600461228c565b610c16565b6101136101b9366004612257565b610e86565b3480156101ca57600080fd5b50600154610126565b6101136101e1366004612257565b610fff565b6101136101f4366004612257565b611178565b610113610207366004612257565b6112b7565b61011361021a366004612257565b6114f1565b61011361022d366004612257565b61162e565b34801561023e57600080fd5b5061024761184c565b6040516101309291906122a8565b610113610263366004612257565b6118e9565b610113610276366004612257565b611b09565b610113610289366004612257565b611c48565b61011361029c366004612257565b611d84565b6102b16009600054146027611fa6565b6102cb813515806102c457506001548235145b6028611fa6565b6000808055600280546102dd90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461030990612305565b80156103565780601f1061032b57610100808354040283529160200191610356565b820191906000526020600020905b81548152906001019060200180831161033957829003601f168201915b505050505080602001905181019061036e919061238e565b90506103866040518060200160405280600081525090565b6103978260c0015143106029611fa6565b7fd35ad1aca64c2a7362497fc455219b1326ea65851cccf4bcfcdd0090fca16540836040516103c6919061242c565b60405180910390a16103da34156025611fa6565b60408201516103f5906001600160a01b031633146026611fa6565b610400601e4361245b565b81526040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915282516001600160a01b0390811682526020808501518184015260408086015190921682840152606080860151908401526080808601519084015260a080860151908401528581013560c0840152835160e0840152600b60005543600155905161050e9183910160006101008201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b60405160208183030381529060405260029080519060200190610532929190612117565b5050505050565b6105496001600054146009611fa6565b6105638135158061055c57506001548235145b600a611fa6565b60008080556002805461057590612305565b80601f01602080910402602001604051908101604052809291908181526020018280546105a190612305565b80156105ee5780601f106105c3576101008083540402835291602001916105ee565b820191906000526020600020905b8154815290600101906020018083116105d157829003601f168201915b50505050508060200190518101906106069190612473565b905061061981604001514310600b611fa6565b7f79ca1a789d797004bc78dff9632d64e202e102f2d008dcc20c5a645ef7d4a7d18260405161064891906124e2565b60405180910390a1610661816020015134146008611fa6565b61066961219b565b815181516001600160a01b0390911690526020808301805183518301528251336040909101528183018051600190525143920191909152516106ab908061245b565b6020820151604001526106bd81611fcb565b505050565b6106d2600f60005414604c611fa6565b6106ec813515806106e557506001548235145b604d611fa6565b6000808055600280546106fe90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461072a90612305565b80156107775780601f1061074c57610100808354040283529160200191610777565b820191906000526020600020905b81548152906001019060200180831161075a57829003601f168201915b505050505080602001905181019061078f9190612593565b90506107a4816101000151431015604e611fa6565b7f96969340a6658e1e09f3b3af80819f55bac87c191bbf60c7b83615ec9e37fc06826040516107d391906124e2565b60405180910390a16107e73415604a611fa6565b6040810151610802906001600160a01b03163314604b611fa6565b80604001516001600160a01b03166108fc82606001519081150290604051600060405180830381858888f19350505050158015610843573d6000803e3d6000fd5b506000808055600181905561085a906002906121ed565b5050565b61086e600f600054146047611fa6565b6108888135158061088157506001548235145b6048611fa6565b60008080556002805461089a90612305565b80601f01602080910402602001604051908101604052809291908181526020018280546108c690612305565b80156109135780601f106108e857610100808354040283529160200191610913565b820191906000526020600020905b8154815290600101906020018083116108f657829003601f168201915b505050505080602001905181019061092b9190612593565b90506109436040518060200160405280600081525090565b61095582610100015143106049611fa6565b7f958a3241fda076a77d37f3f7b1cbe8cc470cd495f586396be9ede30fc88618328360405161098491906125b0565b60405180910390a161099834156044611fa6565b81516109b0906001600160a01b031633146045611fa6565b604080516109fc916109d691602080880135928801359101918252602082015260400190565b6040516020818303038152906040528051906020012060001c8360800151146046611fa6565b610a07601e4361245b565b81526040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915282516001600160a01b03908116825260208085015181840152604080860151909216828401526060808601519084015260a080860151608085015260c0808701519185019190915260e0808701519185019190915286830135908401528351610100840152601160005543600155905161050e918391016125d1565b610ade600d600054146041611fa6565b610af881351580610af157506001548235145b6042611fa6565b600080805560028054610b0a90612305565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3690612305565b8015610b835780601f10610b5857610100808354040283529160200191610b83565b820191906000526020600020905b815481529060010190602001808311610b6657829003601f168201915b5050505050806020019051810190610b9b9190612593565b9050610bb08161010001514310156043611fa6565b7f07e6cc8e2fc82a9375e0bae2c8fb95cb33ae4f7121cc887b7bcd23b343d8ec0582604051610bdf91906124e2565b60405180910390a1610bf33415603f611fa6565b610802336001600160a01b031682604001516001600160a01b0316146040611fa6565b610c26600d60005414603c611fa6565b610c4081351580610c3957506001548235145b603d611fa6565b600080805560028054610c5290612305565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7e90612305565b8015610ccb5780601f10610ca057610100808354040283529160200191610ccb565b820191906000526020600020905b815481529060010190602001808311610cae57829003601f168201915b5050505050806020019051810190610ce39190612593565b9050610cfb6040518060200160405280600081525090565b610d0d8261010001514310603e611fa6565b7f6df01b59e7af1b4e575f12c5e2be125c31bd937c4a198e80569276ca84c05bb783604051610d3c91906125b0565b60405180910390a1610d5034156039611fa6565b8151610d68906001600160a01b03163314603a611fa6565b60408051610db491610d8e91602080880135928801359101918252602082015260400190565b6040516020818303038152906040528051906020012060001c836080015114603b611fa6565b610dbf601e4361245b565b81526040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915282516001600160a01b03908116825260208085015181840152604080860151909216828401526060808601519084015260a080860151608085015260c0808701519185019190915260e0808701519185019190915286830135908401528351610100840152600f60005543600155905161050e918391016125d1565b610e96600160005414600e611fa6565b610eb081351580610ea957506001548235145b600f611fa6565b600080805560028054610ec290612305565b80601f0160208091040260200160405190810160405280929190818152602001828054610eee90612305565b8015610f3b5780601f10610f1057610100808354040283529160200191610f3b565b820191906000526020600020905b815481529060010190602001808311610f1e57829003601f168201915b5050505050806020019051810190610f539190612473565b9050610f6781604001514310156010611fa6565b7f82e152e8b1d7e41adffbddbd5b2fe2e130356df9b7ab7d06526a80d7888af3e182604051610f9691906124e2565b60405180910390a1610faa3415600c611fa6565b8051610fc2906001600160a01b03163314600d611fa6565b805160208201516040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610843573d6000803e3d6000fd5b61100f600b600054146036611fa6565b6110298135158061102257506001548235145b6037611fa6565b60008080556002805461103b90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461106790612305565b80156110b45780601f10611089576101008083540402835291602001916110b4565b820191906000526020600020905b81548152906001019060200180831161109757829003601f168201915b50505050508060200190518101906110cc919061263e565b90506110e08160e001514310156038611fa6565b7f5fe72957f5855f25860ec325face1305075da64ba42ea3b56918fbe46e26b4048260405161110f91906124e2565b60405180910390a161112334156034611fa6565b805161113b906001600160a01b031633146035611fa6565b805160608201516040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610843573d6000803e3d6000fd5b6111886005600054146018611fa6565b6111a28135158061119b57506001548235145b6019611fa6565b6000808055600280546111b490612305565b80601f01602080910402602001604051908101604052809291908181526020018280546111e090612305565b801561122d5780601f106112025761010080835404028352916020019161122d565b820191906000526020600020905b81548152906001019060200180831161121057829003601f168201915b505050505080602001905181019061124591906126ea565b90506112598160800151431015601a611fa6565b7f9cdba579557d44a893ea7929682d6795d48dd5c40dc981d852842d4b18914de88260405161128891906124e2565b60405180910390a161129c34156016611fa6565b6040810151610802906001600160a01b031633146017611fa6565b6112c7600760005414601d611fa6565b6112e1813515806112da57506001548235145b601e611fa6565b6000808055600280546112f390612305565b80601f016020809104026020016040519081016040528092919081815260200182805461131f90612305565b801561136c5780601f106113415761010080835404028352916020019161136c565b820191906000526020600020905b81548152906001019060200180831161134f57829003601f168201915b50505050508060200190518101906113849190612774565b905061139c6040518060200160405280600081525090565b6113ad8260a001514310601f611fa6565b7f47a1195f23e4ca8f87a7a744a702eeb3eb5b0d56dae31e23931e0349a611c709836040516113dc919061242c565b60405180910390a16113f03415601b611fa6565b8151611408906001600160a01b03163314601c611fa6565b611413601e4361245b565b81526040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915282516001600160a01b0390811680835260208086015181850190815260408088015185168187019081526060808a01518189019081526080808c0151818b019081528d88013560a0808d019182528d5160c0808f0191825260096000554360015589519b8c019c909c529851978a01979097529451909916928701929092525190850152945190830152925191810191909152905160e08201526101000161050e565b6115016011600054146056611fa6565b61151b8135158061151457506001548235145b6057611fa6565b60008080556002805461152d90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461155990612305565b80156115a65780601f1061157b576101008083540402835291602001916115a6565b820191906000526020600020905b81548152906001019060200180831161158957829003601f168201915b50505050508060200190518101906115be9190612593565b90506115d38161010001514310156058611fa6565b7fa2bfcfc2bf018598bf89847a2aa2dc48cb8eec269fecfd468afbe606d78101bd8260405161160291906124e2565b60405180910390a161161634156054611fa6565b805161113b906001600160a01b031633146055611fa6565b61163e6005600054146013611fa6565b6116588135158061165157506001548235145b6014611fa6565b60008080556002805461166a90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461169690612305565b80156116e35780601f106116b8576101008083540402835291602001916116e3565b820191906000526020600020905b8154815290600101906020018083116116c657829003601f168201915b50505050508060200190518101906116fb91906126ea565b90506117136040518060200160405280600081525090565b611724826080015143106015611fa6565b7f7d7741a24b17d1850d95beda5136388f520bc575ba9499f2f40fdfa7647ad82f83604051611753919061242c565b60405180910390a161176734156011611fa6565b815161177f906001600160a01b031633146012611fa6565b61178a601e4361245b565b81526040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915282516001600160a01b0390811680835260208086015181850190815260408088015185168187019081526060808a01518189019081528b8601356080808b019182528b5160a0808d019182526007600055436001558751998a019a909a52965195880195909552925190971690850152945190830152925191810191909152905160c082015260e00161050e565b60006060600054600280805461186190612305565b80601f016020809104026020016040519081016040528092919081815260200182805461188d90612305565b80156118da5780601f106118af576101008083540402835291602001916118da565b820191906000526020600020905b8154815290600101906020018083116118bd57829003601f168201915b50505050509050915091509091565b6118f9600b600054146031611fa6565b6119138135158061190c57506001548235145b6032611fa6565b60008080556002805461192590612305565b80601f016020809104026020016040519081016040528092919081815260200182805461195190612305565b801561199e5780601f106119735761010080835404028352916020019161199e565b820191906000526020600020905b81548152906001019060200180831161198157829003601f168201915b50505050508060200190518101906119b6919061263e565b90506119ce6040518060200160405280600081525090565b6119df8260e0015143106033611fa6565b7fc99abf4f2124876ba493db2d7e7c61c978cfbe8e164cbc61bfbbca544c6a7a4e83604051611a0e919061242c565b60405180910390a1611a223415602f611fa6565b6040820151611a3d906001600160a01b031633146030611fa6565b611a48601e4361245b565b81526040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915282516001600160a01b0390811682526020808501518184015260408086015190921682840152606080860151908401526080808601519084015260a0808601519084015260c080860151908401528581013560e08401528351610100840152600d60005543600155905161050e918391016125d1565b611b196007600054146022611fa6565b611b3381351580611b2c57506001548235145b6023611fa6565b600080805560028054611b4590612305565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7190612305565b8015611bbe5780601f10611b9357610100808354040283529160200191611bbe565b820191906000526020600020905b815481529060010190602001808311611ba157829003601f168201915b5050505050806020019051810190611bd69190612774565b9050611bea8160a001514310156024611fa6565b7fba16100ad25f3c6798bc3b7e9ca316fb231388e6fa4444c0f477e2a4336514e082604051611c1991906124e2565b60405180910390a1611c2d34156020611fa6565b6040810151610802906001600160a01b031633146021611fa6565b611c58600960005414602c611fa6565b611c7281351580611c6b57506001548235145b602d611fa6565b600080805560028054611c8490612305565b80601f0160208091040260200160405190810160405280929190818152602001828054611cb090612305565b8015611cfd5780601f10611cd257610100808354040283529160200191611cfd565b820191906000526020600020905b815481529060010190602001808311611ce057829003601f168201915b5050505050806020019051810190611d15919061238e565b9050611d298160c00151431015602e611fa6565b7fb764c356a899e639c4043e82fb6274894baac6d84c74f3b3ae78d8f4b22b000382604051611d5891906124e2565b60405180910390a1611d6c3415602a611fa6565b805161113b906001600160a01b03163314602b611fa6565b611d946011600054146051611fa6565b611dae81351580611da757506001548235145b6052611fa6565b600080805560028054611dc090612305565b80601f0160208091040260200160405190810160405280929190818152602001828054611dec90612305565b8015611e395780601f10611e0e57610100808354040283529160200191611e39565b820191906000526020600020905b815481529060010190602001808311611e1c57829003601f168201915b5050505050806020019051810190611e519190612593565b9050611e70604051806040016040528060008152602001600081525090565b611e8282610100015143106053611fa6565b7f0cefefd14ff1b389a32d136c772bb55c0beb86aa78815aa8c485d7618fc1338283604051611eb1919061242c565b60405180910390a1611ec53415604f611fa6565b8151611edd906001600160a01b031633146050611fa6565b8160a001518260e001511415611ef65760018152611f43565b81608001518260c00151611f0a919061245b565b6020820181905260e08301511415611f255760028152611f43565b8160a0015181602001511415611f3e5760008152611f43565b600181525b611f4b61219b565b825181516001600160a01b0391821690526020808501518351820152604080860151845193169281019290925283518184018051919091528051439201919091526060850151905190910152611fa081611fcb565b50505050565b8161085a5760405163100960cb60e01b81526004810182905260240160405180910390fd5b604080516020810190915260008152602082015151600114156120b257601e826020015160200151611ffd919061245b565b81526040805160a0808201835260008083526020808401828152848601838152606080870185815260808089018781528c51516001600160a01b03908116808c528e5189015188528e518d0151821687528e8901518d015185528d5183526005909955436001558b51808901999099529551888c0152935190941691860191909152519184019190915251828401528451808303909301835260c090910190935280519192611fa09260029290910190612117565b6020820151516002146120ca578151604001516120ce565b8151515b6001600160a01b03166108fc83600001516020015160026120ef9190612808565b6040518115909202916000818181858888f19350505050158015610843573d6000803e3d6000fd5b82805461212390612305565b90600052602060002090601f016020900481019282612145576000855561218b565b82601f1061215e57805160ff191683800117855561218b565b8280016001018555821561218b579182015b8281111561218b578251825591602001919060010190612170565b5061219792915061222a565b5090565b6040805160a081018252600091810182815260608201839052608082019290925290819081526020016121e860405180606001604052806000815260200160008152602001600081525090565b905290565b5080546121f990612305565b6000825580601f10612209575050565b601f016020900490600052602060002090810190612227919061222a565b50565b5b80821115612197576000815560010161222b565b60006040828403121561225157600080fd5b50919050565b60006040828403121561226957600080fd5b612273838361223f565b9392505050565b60006060828403121561225157600080fd5b60006060828403121561229e57600080fd5b612273838361227a565b82815260006020604081840152835180604085015260005b818110156122dc578581018301518582016060015282016122c0565b818111156122ee576000606083870101525b50601f01601f191692909201606001949350505050565b600181811c9082168061231957607f821691505b6020821081141561225157634e487b7160e01b600052602260045260246000fd5b604051610120810167ffffffffffffffff8111828210171561236c57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b038116811461238957600080fd5b919050565b600060e082840312156123a057600080fd5b60405160e0810181811067ffffffffffffffff821117156123d157634e487b7160e01b600052604160045260246000fd5b6040526123dd83612372565b8152602083015160208201526123f560408401612372565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b8135815260208083013590820152604081015b92915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561246e5761246e612445565b500190565b60006060828403121561248557600080fd5b6040516060810181811067ffffffffffffffff821117156124b657634e487b7160e01b600052604160045260246000fd5b6040526124c283612372565b815260208301516020820152604083015160408201528091505092915050565b813581526040810160208301358015158082146124fe57600080fd5b806020850152505092915050565b6000610120828403121561251f57600080fd5b61252761233a565b905061253282612372565b81526020820151602082015261254a60408301612372565b6040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b600061012082840312156125a657600080fd5b612273838361250c565b8135815260208083013590820152604080830135908201526060810161243f565b81516001600160a01b0390811682526020808401519083015260408084015190911690820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e080830151908201526101008083015190820152610120810161243f565b600061010080838503121561265257600080fd5b6040519081019067ffffffffffffffff8211818310171561268357634e487b7160e01b600052604160045260246000fd5b8160405261269084612372565b8152602084015160208201526126a860408501612372565b6040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b600060a082840312156126fc57600080fd5b60405160a0810181811067ffffffffffffffff8211171561272d57634e487b7160e01b600052604160045260246000fd5b60405261273983612372565b81526020830151602082015261275160408401612372565b604082015260608301516060820152608083015160808201528091505092915050565b600060c0828403121561278657600080fd5b60405160c0810181811067ffffffffffffffff821117156127b757634e487b7160e01b600052604160045260246000fd5b6040526127c383612372565b8152602083015160208201526127db60408401612372565b6040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600081600019048311821515161561282257612822612445565b50029056fea2646970667358221220493017e042ec68b6877aff57973a97a7ff5e31d89f87312d05f67bc4660a77fe64736f6c63430008090033`,\n  BytecodeLen: 11104,\n  Which: `oD`,\n  version: 5,\n  views: {\n  }\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\nexport const _Participants = {\n  \"Alice\": Alice,\n  \"Bob\": Bob\n};\nexport const _APIs = {\n};\n","export async function run(type, id) {\n\n  window.reachLog = \"Starting reach...\"\n\n  function log(input) {\n    window.reachLog += (\"\\n\" + input)\n  }\n\n  const startingBalance = window.stdlib.parseCurrency(3);\n\n  const accAlice = window.acct\n  const accBob = window.acct\n\n  const fmt = (x) => window.stdlib.formatCurrency(x, 4);\n  const getBalance = async (who) => fmt(await window.stdlib.balanceOf(who));\n  const FINGERS = [0, 1, 2, 3, 4, 5];\n  const GUESS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const OUTCOME = ['Bob wins', 'Draw', 'Alice wins'];\n\n  const Player = (Who) => ({\n    ...window.stdlib.hasRandom,\n    getFingers: async () => {\n      // const fingers = Math.floor(Math.random() * 3);\n      const fingers = Math.floor(Math.random() * 6);\n      log(`${Who} shoots ${FINGERS[fingers]} fingers`);\n      // build in occasional timeout\n      if (Math.random() <= 0.01) {\n        for (let i = 0; i < 10; i++) {\n          log(`  ${Who} takes their sweet time sending it back...`);\n          await window.stdlib.wait(1);\n        }\n      }\n      return fingers;\n    },\n    getGuess: async (fingers) => {\n      // guess should be greater than or equal to number of fingers thrown\n      // const guess= Math.floor(Math.random() * 3);\n      const guess = Math.floor(Math.random() * 6) + FINGERS[fingers];\n      // occassional timeout\n      if (Math.random() <= 0.01) {\n        for (let i = 0; i < 10; i++) {\n          log(`  ${Who} takes their sweet time sending it back...`);\n          await window.stdlib.wait(1);\n        }\n      }\n      log(`${Who} guessed total of ${guess}`);\n      return guess;\n    },\n    seeWinning: (winningNumber) => {\n      log(`Actual total fingers thrown: ${winningNumber}`);\n      log(`----------------------------`);\n    },\n\n    seeOutcome: (outcome) => {\n      log(`${Who} saw outcome ${OUTCOME[outcome]}`);\n    },\n    informTimeout: () => {\n      log(`${Who} observed a timeout`);\n    },\n  });\n\n  if (type === \"Deployer\") {\n    const beforeAlice = await getBalance(accAlice);\n    const ctcAlice = accAlice.deploy(window.backend);\n    await Promise.all([\n      window.backend.Alice(ctcAlice, {\n        ...Player('Alice'),\n        wager: window.stdlib.parseCurrency(5),\n        ...window.stdlib.hasConsoleLogger,\n      })])\n\n    const afterAlice = await getBalance(accAlice);\n    log(`Alice went from ${beforeAlice} to ${afterAlice}.`);\n  }\n\n  else {\n    const beforeBob = await getBalance(accBob);\n    const ctcBob = accBob.attach(window.backend, parseInt(id));\n    await Promise.all([\n      window.backend.Bob(ctcBob, {\n        ...Player('Bob'),\n        acceptWager: (amt) => {\n          log(`Bob accepts the wager of ${fmt(amt)}.`);\n        },\n        ...window.stdlib.hasConsoleLogger,\n      })\n    ])\n\n    const afterBob = await getBalance(accBob);\n\n    log(`Bob went from ${beforeBob} to ${afterBob}.`);\n\n  }\n\n}\n","// Automatically generated with Reach 0.1.7 (d2352c9e)\n/* eslint-disable */\nexport const _version = '0.1.7';\nexport const _versionHash = '0.1.7 (d2352c9e)';\nexport const _backendVersion = 6;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Bool;\n  \n  return {\n    infos: {\n      },\n    views: {\n      3: [ctc0, ctc1],\n      5: [ctc0, ctc1, ctc1, ctc2, ctc0, ctc1]\n      }\n    };\n  \n  };\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\nexport async function Creator(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Creator expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Creator expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Bool;\n  \n  \n  const v173 = stdlib.protect(ctc0, await interact.getId(), {\n    at: './index.rsh:28:43:application',\n    fs: ['at ./index.rsh:27:17:application call to [unknown function] (defined at: ./index.rsh:27:21:function exp)'],\n    msg: 'getId',\n    who: 'Creator'\n    });\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v173],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:30:13:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v175], secs: v177, time: v176, didSend: v25, from: v174 } = txn1;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v179 = v174;\n      const v180 = v176;\n      \n      if (await (async () => {\n        \n        return true;})()) {\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n          })\n        sim_r.isHalt = true;\n        }\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n    }));\n  const {data: [v175], secs: v177, time: v176, didSend: v25, from: v174 } = txn1;\n  ;\n  let v179 = v174;\n  let v180 = v176;\n  \n  while (await (async () => {\n    \n    return true;})()) {\n    const txn2 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 2,\n      funcNum: 2,\n      out_tys: [ctc0, ctc0],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const {data: [v194, v195], secs: v197, time: v196, didSend: v46, from: v193 } = txn2;\n    ;\n    const v200 = stdlib.add(v180, v195);\n    let v201 = v194;\n    let v202 = true;\n    let v203 = v179;\n    let v204 = v196;\n    let v205 = v180;\n    \n    while (await (async () => {\n      const v215 = stdlib.gt(v200, v205);\n      \n      return v215;})()) {\n      const txn3 = await (ctc.recv({\n        didSend: false,\n        evt_cnt: 1,\n        funcNum: 4,\n        out_tys: [ctc0],\n        timeoutAt: ['time', v200],\n        waitIfNotPresent: false\n        }));\n      if (txn3.didTimeout) {\n        const txn4 = await (ctc.sendrecv({\n          args: [v179, v200, v201, v202, v203, v204],\n          evt_cnt: 0,\n          funcNum: 5,\n          lct: v204,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const {data: [], secs: v251, time: v250, didSend: v150, from: v249 } = txn4;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const cv201 = v201;\n            const cv202 = v202;\n            const cv203 = v203;\n            const cv204 = v250;\n            const cv205 = v204;\n            \n            await (async () => {\n              const v201 = cv201;\n              const v202 = cv202;\n              const v203 = cv203;\n              const v204 = cv204;\n              const v205 = cv205;\n              \n              if (await (async () => {\n                const v215 = stdlib.gt(v200, v205);\n                \n                return v215;})()) {\n                sim_r.isHalt = false;\n                }\n              else {\n                const v255 = v202 ? stdlib.checkedBigNumberify('./index.rsh:76:29:decimal', stdlib.UInt_max, 0) : v201;\n                sim_r.txns.push({\n                  amt: v255,\n                  kind: 'from',\n                  to: v179,\n                  tok: undefined\n                  });\n                const cv179 = v203;\n                const cv180 = v204;\n                \n                await (async () => {\n                  const v179 = cv179;\n                  const v180 = cv180;\n                  \n                  if (await (async () => {\n                    \n                    return true;})()) {\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    }})();}})();\n            return sim_r;\n            }),\n          soloSend: false,\n          timeoutAt: undefined,\n          tys: [ctc1, ctc0, ctc0, ctc2, ctc1, ctc0],\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v251, time: v250, didSend: v150, from: v249 } = txn4;\n        ;\n        const cv201 = v201;\n        const cv202 = v202;\n        const cv203 = v203;\n        const cv204 = v250;\n        const cv205 = v204;\n        \n        v201 = cv201;\n        v202 = cv202;\n        v203 = cv203;\n        v204 = cv204;\n        v205 = cv205;\n        \n        continue;\n        }\n      else {\n        const {data: [v237], secs: v239, time: v238, didSend: v130, from: v236 } = txn3;\n        ;\n        const v242 = stdlib.gt(v237, v201);\n        stdlib.assert(v242, {\n          at: './index.rsh:68:22:application',\n          fs: ['at ./index.rsh:67:19:application call to [unknown function] (defined at: ./index.rsh:67:19:function exp)'],\n          msg: null,\n          who: 'Creator'\n          });\n        const v243 = v202 ? stdlib.checkedBigNumberify('./index.rsh:70:37:decimal', stdlib.UInt_max, 0) : v201;\n        ;\n        const cv201 = v237;\n        const cv202 = false;\n        const cv203 = v236;\n        const cv204 = v238;\n        const cv205 = v204;\n        \n        v201 = cv201;\n        v202 = cv202;\n        v203 = cv203;\n        v204 = cv204;\n        v205 = cv205;\n        \n        continue;}\n      \n      }\n    const v255 = v202 ? stdlib.checkedBigNumberify('./index.rsh:76:29:decimal', stdlib.UInt_max, 0) : v201;\n    ;\n    const cv179 = v203;\n    const cv180 = v204;\n    \n    v179 = cv179;\n    v180 = cv180;\n    \n    continue;\n    \n    }\n  return;\n  \n  \n  };\nexport async function Owner(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Owner expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Owner expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Null;\n  const ctc2 = stdlib.T_Object({\n    startingBid: ctc0,\n    timeout: ctc0\n    });\n  const ctc3 = stdlib.T_Data({\n    None: ctc1,\n    Some: ctc0\n    });\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Bool;\n  \n  \n  const txn1 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [v175], secs: v177, time: v176, didSend: v25, from: v174 } = txn1;\n  ;\n  let v179 = v174;\n  let v180 = v176;\n  \n  while (await (async () => {\n    \n    return true;})()) {\n    const v185 = ctc.selfAddress();\n    stdlib.protect(ctc1, await interact.showOwner(v175, v179), {\n      at: './index.rsh:39:27:application',\n      fs: ['at ./index.rsh:38:17:application call to [unknown function] (defined at: ./index.rsh:38:21:function exp)'],\n      msg: 'showOwner',\n      who: 'Owner'\n      });\n    const v187 = stdlib.addressEq(v185, v179);\n    let v188;\n    if (v187) {\n      const v189 = stdlib.protect(ctc2, await interact.getAuctionProps(), {\n        at: './index.rsh:42:56:application',\n        fs: ['at ./index.rsh:38:17:application call to [unknown function] (defined at: ./index.rsh:38:21:function exp)'],\n        msg: 'getAuctionProps',\n        who: 'Owner'\n        });\n      v188 = v189;\n      }\n    else {\n      const v190 = {\n        startingBid: stdlib.checkedBigNumberify('./index.rsh:19:37:decimal', stdlib.UInt_max, 0),\n        timeout: stdlib.checkedBigNumberify('./index.rsh:19:49:decimal', stdlib.UInt_max, 0)\n        };\n      v188 = v190;\n      }\n    const v191 = v188.startingBid;\n    const v192 = v188.timeout;\n    \n    const txn2 = await (ctc.sendrecv({\n      args: [v179, v180, v191, v192],\n      evt_cnt: 2,\n      funcNum: 2,\n      lct: v180,\n      onlyIf: v187,\n      out_tys: [ctc0, ctc0],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn2) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v194, v195], secs: v197, time: v196, didSend: v46, from: v193 } = txn2;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v200 = stdlib.add(v180, v195);\n        const v201 = v194;\n        const v202 = true;\n        const v203 = v179;\n        const v204 = v196;\n        const v205 = v180;\n        \n        if (await (async () => {\n          const v215 = stdlib.gt(v200, v205);\n          \n          return v215;})()) {\n          sim_r.isHalt = false;\n          }\n        else {\n          const v255 = v202 ? stdlib.checkedBigNumberify('./index.rsh:76:29:decimal', stdlib.UInt_max, 0) : v201;\n          sim_r.txns.push({\n            amt: v255,\n            kind: 'from',\n            to: v179,\n            tok: undefined\n            });\n          const cv179 = v203;\n          const cv180 = v204;\n          \n          await (async () => {\n            const v179 = cv179;\n            const v180 = cv180;\n            \n            if (await (async () => {\n              \n              return true;})()) {\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }})();}\n        return sim_r;\n        }),\n      soloSend: false,\n      timeoutAt: undefined,\n      tys: [ctc4, ctc0, ctc0, ctc0],\n      waitIfNotPresent: false\n      }));\n    const {data: [v194, v195], secs: v197, time: v196, didSend: v46, from: v193 } = txn2;\n    ;\n    const v200 = stdlib.add(v180, v195);\n    let v201 = v194;\n    let v202 = true;\n    let v203 = v179;\n    let v204 = v196;\n    let v205 = v180;\n    \n    while (await (async () => {\n      const v215 = stdlib.gt(v200, v205);\n      \n      return v215;})()) {\n      const v218 = ctc.selfAddress();\n      const v220 = stdlib.addressEq(v218, v179);\n      const v222 = stdlib.addressEq(v218, v203);\n      const v223 = v222 ? false : true;\n      const v224 = v220 ? false : v223;\n      let v225;\n      if (v224) {\n        const v226 = stdlib.protect(ctc3, await interact.getBid(v201), {\n          at: './index.rsh:59:45:application',\n          fs: ['at ./index.rsh:57:16:application call to [unknown function] (defined at: ./index.rsh:57:16:function exp)', 'at ./index.rsh:57:16:application call to [unknown function] (defined at: ./index.rsh:57:16:function exp)'],\n          msg: 'getBid',\n          who: 'Owner'\n          });\n        v225 = v226;\n        }\n      else {\n        const v227 = ['None', null];\n        v225 = v227;\n        }\n      let v228;\n      switch (v225[0]) {\n        case 'None': {\n          const v229 = v225[1];\n          v228 = false;\n          \n          break;\n          }\n        case 'Some': {\n          const v230 = v225[1];\n          const v231 = stdlib.gt(v230, v201);\n          v228 = v231;\n          \n          break;\n          }\n        }\n      let v232;\n      switch (v225[0]) {\n        case 'None': {\n          const v233 = v225[1];\n          v232 = stdlib.checkedBigNumberify('./index.rsh:63:38:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Some': {\n          const v234 = v225[1];\n          v232 = v234;\n          \n          break;\n          }\n        }\n      \n      const txn3 = await (ctc.sendrecv({\n        args: [v179, v200, v201, v202, v203, v204, v232],\n        evt_cnt: 1,\n        funcNum: 4,\n        lct: v204,\n        onlyIf: v228,\n        out_tys: [ctc0],\n        pay: [v232, []],\n        sim_p: (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const {data: [v237], secs: v239, time: v238, didSend: v130, from: v236 } = txn3;\n          \n          sim_r.txns.push({\n            amt: v237,\n            kind: 'to',\n            tok: undefined\n            });\n          const v242 = stdlib.gt(v237, v201);\n          stdlib.assert(v242, {\n            at: './index.rsh:68:22:application',\n            fs: ['at ./index.rsh:67:19:application call to [unknown function] (defined at: ./index.rsh:67:19:function exp)'],\n            msg: null,\n            who: 'Owner'\n            });\n          const v243 = v202 ? stdlib.checkedBigNumberify('./index.rsh:70:37:decimal', stdlib.UInt_max, 0) : v201;\n          sim_r.txns.push({\n            amt: v243,\n            kind: 'from',\n            to: v203,\n            tok: undefined\n            });\n          const cv201 = v237;\n          const cv202 = false;\n          const cv203 = v236;\n          const cv204 = v238;\n          const cv205 = v204;\n          \n          await (async () => {\n            const v201 = cv201;\n            const v202 = cv202;\n            const v203 = cv203;\n            const v204 = cv204;\n            const v205 = cv205;\n            \n            if (await (async () => {\n              const v215 = stdlib.gt(v200, v205);\n              \n              return v215;})()) {\n              sim_r.isHalt = false;\n              }\n            else {\n              const v255 = v202 ? stdlib.checkedBigNumberify('./index.rsh:76:29:decimal', stdlib.UInt_max, 0) : v201;\n              sim_r.txns.push({\n                amt: v255,\n                kind: 'from',\n                to: v179,\n                tok: undefined\n                });\n              const cv179 = v203;\n              const cv180 = v204;\n              \n              await (async () => {\n                const v179 = cv179;\n                const v180 = cv180;\n                \n                if (await (async () => {\n                  \n                  return true;})()) {\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  }})();}})();\n          return sim_r;\n          }),\n        soloSend: false,\n        timeoutAt: ['time', v200],\n        tys: [ctc4, ctc0, ctc0, ctc5, ctc4, ctc0, ctc0],\n        waitIfNotPresent: false\n        }));\n      if (txn3.didTimeout) {\n        const txn4 = await (ctc.sendrecv({\n          args: [v179, v200, v201, v202, v203, v204],\n          evt_cnt: 0,\n          funcNum: 5,\n          lct: v204,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const {data: [], secs: v251, time: v250, didSend: v150, from: v249 } = txn4;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const cv201 = v201;\n            const cv202 = v202;\n            const cv203 = v203;\n            const cv204 = v250;\n            const cv205 = v204;\n            \n            await (async () => {\n              const v201 = cv201;\n              const v202 = cv202;\n              const v203 = cv203;\n              const v204 = cv204;\n              const v205 = cv205;\n              \n              if (await (async () => {\n                const v215 = stdlib.gt(v200, v205);\n                \n                return v215;})()) {\n                sim_r.isHalt = false;\n                }\n              else {\n                const v255 = v202 ? stdlib.checkedBigNumberify('./index.rsh:76:29:decimal', stdlib.UInt_max, 0) : v201;\n                sim_r.txns.push({\n                  amt: v255,\n                  kind: 'from',\n                  to: v179,\n                  tok: undefined\n                  });\n                const cv179 = v203;\n                const cv180 = v204;\n                \n                await (async () => {\n                  const v179 = cv179;\n                  const v180 = cv180;\n                  \n                  if (await (async () => {\n                    \n                    return true;})()) {\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    }})();}})();\n            return sim_r;\n            }),\n          soloSend: false,\n          timeoutAt: undefined,\n          tys: [ctc4, ctc0, ctc0, ctc5, ctc4, ctc0],\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v251, time: v250, didSend: v150, from: v249 } = txn4;\n        ;\n        const cv201 = v201;\n        const cv202 = v202;\n        const cv203 = v203;\n        const cv204 = v250;\n        const cv205 = v204;\n        \n        v201 = cv201;\n        v202 = cv202;\n        v203 = cv203;\n        v204 = cv204;\n        v205 = cv205;\n        \n        continue;\n        }\n      else {\n        const {data: [v237], secs: v239, time: v238, didSend: v130, from: v236 } = txn3;\n        ;\n        const v242 = stdlib.gt(v237, v201);\n        stdlib.assert(v242, {\n          at: './index.rsh:68:22:application',\n          fs: ['at ./index.rsh:67:19:application call to [unknown function] (defined at: ./index.rsh:67:19:function exp)'],\n          msg: null,\n          who: 'Owner'\n          });\n        const v243 = v202 ? stdlib.checkedBigNumberify('./index.rsh:70:37:decimal', stdlib.UInt_max, 0) : v201;\n        ;\n        const cv201 = v237;\n        const cv202 = false;\n        const cv203 = v236;\n        const cv204 = v238;\n        const cv205 = v204;\n        \n        v201 = cv201;\n        v202 = cv202;\n        v203 = cv203;\n        v204 = cv204;\n        v205 = cv205;\n        \n        continue;}\n      \n      }\n    const v255 = v202 ? stdlib.checkedBigNumberify('./index.rsh:76:29:decimal', stdlib.UInt_max, 0) : v201;\n    ;\n    const cv179 = v203;\n    const cv180 = v204;\n    \n    v179 = cv179;\n    v180 = cv180;\n    \n    continue;\n    \n    }\n  return;\n  \n  \n  };\nexport const _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\nint 8\nextract_uint64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 255\npop\n// \"CheckPay\"\n// \"./index.rsh:30:13:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:30:13:dot\"\n// \"[]\"\nbyte base64()\ntxn Sender\nglobal Round\nitob\nconcat\nb loopBody1\nl0_afterHandler0:\nl2_afterHandler1:\n// Handler 2\ndup\nint 2\n==\nbz l3_afterHandler2\npop\n// check step\nint 3\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 16\n==\nassert\ndup\nint 0\nextract_uint64\nstore 253\ndup\nint 8\nextract_uint64\nstore 252\npop\n// \"CheckPay\"\n// \"./index.rsh:45:10:dot\"\n// \"[]\"\nload 255\nload 254\nload 252\n+\nitob\nconcat\nload 253\nitob\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 255\nconcat\nglobal Round\nitob\nconcat\nload 254\nitob\nconcat\nb loopBody3\nl3_afterHandler2:\nl4_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l5_afterHandler4\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nextract 48 1\nbtoi\nstore 252\ndup\nextract 49 32\nstore 251\ndup\nint 81\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 249\npop\nglobal Round\nload 254\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:53:23:dot\"\n// \"[]\"\nload 249\ndup\nbz l6_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl6_checkTxnK:\npop\n// Nothing\n// \"./index.rsh:68:22:application\"\n// \"[at ./index.rsh:67:19:application call to [unknown function] (defined at: ./index.rsh:67:19:function exp)]\"\nload 249\nload 253\n>\nassert\nload 253\nint 0\nload 252\nselect\ndup\nbz l7_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 251\nitxn_field Receiver\nitxn_submit\nint 0\nl7_makeTxnK:\npop\nload 255\nload 254\nitob\nconcat\nload 249\nitob\nint 0\nitob // bool\nsubstring 7 8\nconcat\ntxn Sender\nconcat\nglobal Round\nitob\nconcat\nload 250\nitob\nconcat\nb loopBody3\nl5_afterHandler4:\n// Handler 5\ndup\nint 5\n==\nbz l8_afterHandler5\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nextract 48 1\nbtoi\nstore 252\ndup\nextract 49 32\nstore 251\ndup\nint 81\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 254\n>=\nassert\n// \"CheckPay\"\n// \"./index.rsh:53:23:dot\"\n// \"[at ./index.rsh:74:25:application call to [unknown function] (defined at: ./index.rsh:74:25:function exp)]\"\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nload 252\nitob // bool\nsubstring 7 8\nconcat\nload 251\nconcat\nglobal Round\nitob\nconcat\nload 250\nitob\nconcat\nb loopBody3\nl8_afterHandler5:\nint 0\nassert\nloopBody1:\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\npop\nload 255\nload 254\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 40\napp_global_put\npop\nint 3\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody3:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nextract 8 1\nbtoi\nstore 254\ndup\nextract 9 32\nstore 253\ndup\nint 41\nextract_uint64\nstore 252\ndup\nint 49\nextract_uint64\nstore 251\npop\ndup\nextract 0 32\nstore 250\ndup\nint 32\nextract_uint64\nstore 249\npop\nload 249\nload 251\n>\nbz l9_ifF\nload 250\nload 249\nitob\nconcat\nload 255\nitob\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 89\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_ifF:\nload 255\nint 0\nload 254\nselect\ndup\nbz l10_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 250\nitxn_field Receiver\nitxn_submit\nint 0\nl10_makeTxnK:\npop\nbyte base64()\nload 253\nload 252\nitob\nconcat\nb loopBody1\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 89,\n  unsupported: [],\n  version: 6\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v175\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v175\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v194\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v195\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v237\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v194\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v195\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v237\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060405260405162000fa538038062000fa5833981016040819052620000269162000228565b6000805543600355604080518251815260208084015151908201527fd2fa1fac07e66d08cb46271d2f3a2585d9761d2d591a51cc30a2056942bc38db910160405180910390a16200007a34156007620000a6565b6200008462000142565b6020808201805133905251439101526200009e81620000d0565b505062000307565b81620000cc5760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b604080518082018252600080825260208083018281528582018051516001600160a01b03168086529051830151825260039093554360015584518083019390935251828501528351808303850181526060909201909352805191926200013d926002929091019062000182565b505050565b60405180604001604052806000151581526020016200017d604051806040016040528060006001600160a01b03168152602001600081525090565b905290565b8280546200019090620002ca565b90600052602060002090601f016020900481019282620001b45760008555620001ff565b82601f10620001cf57805160ff1916838001178555620001ff565b82800160010185558215620001ff579182015b82811115620001ff578251825591602001919060010190620001e2565b506200020d92915062000211565b5090565b5b808211156200020d576000815560010162000212565b60008183036040808212156200023d57600080fd5b80518082016001600160401b0380821183831017156200026d57634e487b7160e01b600052604160045260246000fd5b818452865183526020601f19860112156200028757600080fd5b835194506020850191508482108183111715620002b457634e487b7160e01b600052604160045260246000fd5b5090915260209384015182529283015250919050565b600181811c90821680620002df57607f821691505b602082108114156200030157634e487b7160e01b600052602260045260246000fd5b50919050565b610c8e80620003176000396000f3fe6080604052600436106100565760003560e01c80631e93b0f11461005f57806383230757146100835780638e314769146100985780639014596a146100ab578063a209ad4e146100be578063ab53f2c6146100d157005b3661005d57005b005b34801561006b57600080fd5b506003545b6040519081526020015b60405180910390f35b34801561008f57600080fd5b50600154610070565b61005d6100a6366004610a1a565b6100f4565b61005d6100b9366004610a3d565b61028e565b61005d6100cc366004610a1a565b61042d565b3480156100dd57600080fd5b506100e6610620565b60405161007a929190610a4f565b61010460056000541460116106bd565b61011e8135158061011757506001548235145b60126106bd565b60008080556002805461013090610aac565b80601f016020809104026020016040519081016040528092919081815260200182805461015c90610aac565b80156101a95780601f1061017e576101008083540402835291602001916101a9565b820191906000526020600020905b81548152906001019060200180831161018c57829003601f168201915b50505050508060200190518101906101c19190610b0b565b90506101d5816020015143101560136106bd565b7f9cdba579557d44a893ea7929682d6795d48dd5c40dc981d852842d4b18914de8826040516102049190610ba8565b60405180910390a1610218341560106106bd565b6102206108dc565b815181516001600160a01b0391821690526020808401518351820152604080850151828501805191909152606080870151825190151594019390935260808087015182519516949092019390935282514392019190915260a084015191510152610289816106e6565b505050565b61029e60036000541460096106bd565b6102b8813515806102b157506001548235145b600a6106bd565b6000808055600280546102ca90610aac565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610aac565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b505050505080602001905181019061035b9190610bcd565b604080518435815260208086013590820152848201358183015290519192507f1909e55c00533c67ba90e14c8fe93a469c3600425ed0758459eff538687e7b91919081900360600190a16103b1341560086106bd565b6103b96108dc565b815181516001600160a01b03909116905260208201516103de90604085013590610c32565b815160209081019190915280820180518583013590528051600190830152835181516001600160a01b0390911660409091015280514360609091015290830151905160800152610289816106e6565b61043d600560005414600d6106bd565b6104578135158061045057506001548235145b600e6106bd565b60008080556002805461046990610aac565b80601f016020809104026020016040519081016040528092919081815260200182805461049590610aac565b80156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b50505050508060200190518101906104fa9190610b0b565b905061050d81602001514310600f6106bd565b6040805183358152602080850135908201527f7d7741a24b17d1850d95beda5136388f520bc575ba9499f2f40fdfa7647ad82f910160405180910390a161055b34602084013514600b6106bd565b604081015161057190602084013511600c6106bd565b80608001516001600160a01b03166108fc8260600151610595578260400151610598565b60005b6040518115909202916000818181858888f193505050501580156105c0573d6000803e3d6000fd5b506105c96108dc565b815181516001600160a01b039091169052602080830151825182015280820180518583013590528051600092019190915280513360409091015280514360609091015260a0830151905160800152610289816106e6565b60006060600054600280805461063590610aac565b80601f016020809104026020016040519081016040528092919081815260200182805461066190610aac565b80156106ae5780601f10610683576101008083540402835291602001916106ae565b820191906000526020600020905b81548152906001019060200180831161069157829003601f168201915b50505050509050915091509091565b816106e25760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b80602001516080015181600001516020015111156107f1576040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091528151516001600160a01b0390811680835283516020908101518185019081528186018051516040808801918252825185015115156060808a01918252845183015189166080808c01918252955182015160a0808d019182526005600055436001558551998a019a909a5296519388019390935292519286019290925290511515918401919091525190931691810191909152905160c082015260e0015b6040516020818303038152906040526002908051906020019061028992919061092f565b8060000151600001516001600160a01b03166108fc82602001516020015161081e57602083015151610821565b60005b6040518115909202916000818181858888f19350505050158015610849573d6000803e3d6000fd5b506108526109b3565b602080830180516040015183830180516001600160a01b039092169091529051606001519051909101526106e281610888565b50565b604080518082019091526000808252602082015260208281018051516001600160a01b03168084529051820151838301908152600360005543600155604080519384019290925251908201526060016107cd565b604080516080810182526000918101828152606082019290925290819081526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b905290565b82805461093b90610aac565b90600052602060002090601f01602090048101928261095d57600085556109a3565b82601f1061097657805160ff19168380011785556109a3565b828001600101855582156109a3579182015b828111156109a3578251825591602001919060010190610988565b506109af9291506109ed565b5090565b604051806040016040528060001515815260200161092a604051806040016040528060006001600160a01b03168152602001600081525090565b5b808211156109af57600081556001016109ee565b600060408284031215610a1457600080fd5b50919050565b600060408284031215610a2c57600080fd5b610a368383610a02565b9392505050565b600060608284031215610a1457600080fd5b82815260006020604081840152835180604085015260005b81811015610a8357858101830151858201606001528201610a67565b81811115610a95576000606083870101525b50601f01601f191692909201606001949350505050565b600181811c90821680610ac057607f821691505b60208210811415610a1457634e487b7160e01b600052602260045260246000fd5b80516001600160a01b0381168114610af857600080fd5b919050565b801515811461088557600080fd5b600060c08284031215610b1d57600080fd5b60405160c0810181811067ffffffffffffffff82111715610b4e57634e487b7160e01b600052604160045260246000fd5b604052610b5a83610ae1565b815260208301516020820152604083015160408201526060830151610b7e81610afd565b6060820152610b8f60808401610ae1565b608082015260a083015160a08201528091505092915050565b81358152604081016020830135610bbe81610afd565b80151560208401525092915050565b600060408284031215610bdf57600080fd5b6040516040810181811067ffffffffffffffff82111715610c1057634e487b7160e01b600052604160045260246000fd5b604052610c1c83610ae1565b8152602083015160208201528091505092915050565b60008219821115610c5357634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220894399f2768ff421a7a2be088c1aa12bc2116c4f5ef3b672ab3129d35608664b64736f6c63430008090033`,\n  BytecodeLen: 4005,\n  Which: `oD`,\n  version: 5,\n  views: {\n    }\n  };\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\nexport const _Participants = {\n  \"Creator\": Creator,\n  \"Owner\": Owner\n  };\nexport const _APIs = {\n  };\n","export async function run() {\r\n  window.reachLog = \"Starting reach...\"\r\n\r\n  function log(input){\r\n    window.reachLog += (\"\\n\" + input)\r\n  }\r\n  \r\n  const timeoutK = window.stdlib.connector === 'ALGO' ? 1 : 3;\r\n  const startingBalance = window.stdlib.parseCurrency(100);\r\n  const fmt = (x) => window.stdlib.formatCurrency(x, 4);\r\n  const getBalance = async (who) => fmt(await window.stdlib.balanceOf(who));\r\n\r\n  const accAlice  = window.acct\r\n  const accBob    = window.acct\r\n  const accClaire = window.acct\r\n\r\n  const ctcAlice = accAlice.deploy(window.backend);\r\n\r\n  const everyone = [\r\n    [' Alice', accAlice],\r\n    ['   Bob', accBob],\r\n    ['Claire', accClaire],\r\n  ];\r\n  const randomArrayRef = (arr) =>\r\n    arr[Math.floor(Math.random() * arr.length)];\r\n\r\n  const auctionProps = {\r\n    ' Alice': {\r\n      startingBid: window.stdlib.parseCurrency(0),\r\n      timeout: timeoutK * 3,\r\n    },\r\n    '   Bob': {\r\n      startingBid: window.stdlib.parseCurrency(1),\r\n      timeout: timeoutK * 3,\r\n    },\r\n    'Claire': {\r\n      startingBid: window.stdlib.parseCurrency(3),\r\n      timeout: timeoutK * 4,\r\n    }\r\n  };\r\n\r\n  const bids = {\r\n    ' Alice': {\r\n      maxBid: window.stdlib.parseCurrency(7),\r\n    },\r\n    '   Bob': {\r\n      maxBid: window.stdlib.parseCurrency(40),\r\n    },\r\n    'Claire': {\r\n      maxBid: window.stdlib.parseCurrency(20),\r\n    }\r\n  };\r\n\r\n  const trades = {\r\n    ' Alice': 0, '   Bob': 0, 'Claire': 0\r\n  };\r\n\r\n  const makeOwner = (acc, who) => {\r\n    const ctc = acc.attach(window.backend, ctcAlice.getInfo());\r\n    const others = everyone.filter(x => x[0] !== who);\r\n    return window.backend.Owner(ctc, {\r\n      showOwner: ((id, owner) => {\r\n        if ( window.stdlib.addressEq(owner, acc) ) {\r\n          log(`\\n${who} owns it\\n`);\r\n          if ( trades[who] == 2 ) {\r\n            log(`${who} stops`);\r\n            process.exit(0);\r\n          } else {\r\n            trades[who] += 1;\r\n          }\r\n        }\r\n      }),\r\n      getAuctionProps: (() => {\r\n        log(`${who} starts the bidding at ${fmt(auctionProps[who].startingBid)}`);\r\n        return auctionProps[who];\r\n      }),\r\n      getBid: (price) => {\r\n        if (price < bids[who].maxBid) {\r\n          const bid = window.stdlib.add(price, window.stdlib.parseCurrency(1));\r\n          log(`${who} tries to bid ${fmt(bid)} (based on price: ${fmt(price)})`);\r\n          return ['Some', bid];\r\n        } else {\r\n          return ['None', null];\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  await Promise.all([\r\n    window.backend.Creator(\r\n      ctcAlice,\r\n      { getId: () => {\r\n        const id = window.stdlib.randomUInt();\r\n        log(` Alice makes id #${id}`);\r\n        return id; }\r\n      },\r\n    ),\r\n    makeOwner(accAlice , ' Alice'),\r\n    makeOwner(accBob   , '   Bob'),\r\n    makeOwner(accClaire, 'Claire'),\r\n  ]);\r\n}\r\n","// Automatically generated with Reach 0.1.7 (d2352c9e)\n/* eslint-disable */\nexport const _version = '0.1.7';\nexport const _versionHash = '0.1.7 (d2352c9e)';\nexport const _backendVersion = 6;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  \n  return {\n    infos: {\n      },\n    views: {\n      1: [ctc0, ctc1],\n      4: [ctc1, ctc0, ctc0, ctc1, ctc1, ctc1, ctc1, ctc1]\n      }\n    };\n  \n  };\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\nexport async function Pollster(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Pollster expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Pollster expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Object({\n    aliceAddr: ctc0,\n    bobAddr: ctc0,\n    deadline: ctc1,\n    ticketPrice: ctc1\n    });\n  const ctc3 = stdlib.T_Bool;\n  const ctc4 = stdlib.T_Null;\n  \n  \n  const txn1 = await (ctc.sendrecv({\n    args: [],\n    evt_cnt: 0,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:38:14:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [], secs: v139, time: v138, didSend: v19, from: v137 } = txn1;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [],\n    waitIfNotPresent: false\n    }));\n  const {data: [], secs: v139, time: v138, didSend: v19, from: v137 } = txn1;\n  ;\n  const v143 = stdlib.protect(ctc2, await interact.getParams(), {\n    at: './index.rsh:42:38:application',\n    fs: ['at ./index.rsh:40:18:application call to [unknown function] (defined at: ./index.rsh:40:22:function exp)'],\n    msg: 'getParams',\n    who: 'Pollster'\n    });\n  const v144 = v143.ticketPrice;\n  const v145 = v143.deadline;\n  const v146 = v143.aliceAddr;\n  const v147 = v143.bobAddr;\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v137, v138, v144, v145, v146, v147],\n    evt_cnt: 4,\n    funcNum: 1,\n    lct: v138,\n    onlyIf: true,\n    out_tys: [ctc1, ctc1, ctc0, ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v149, v150, v151, v152], secs: v154, time: v153, didSend: v37, from: v148 } = txn2;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v156 = stdlib.addressEq(v137, v148);\n      stdlib.assert(v156, {\n        at: './index.rsh:44:14:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Pollster'\n        });\n      const v158 = stdlib.add(v138, v150);\n      const v159 = stdlib.checkedBigNumberify('./index.rsh:49:24:decimal', stdlib.UInt_max, 0);\n      const v160 = stdlib.checkedBigNumberify('./index.rsh:49:27:decimal', stdlib.UInt_max, 0);\n      const v161 = v153;\n      const v162 = v138;\n      const v167 = stdlib.checkedBigNumberify('./index.rsh:32:13:after expr stmt semicolon', stdlib.UInt_max, 0);\n      \n      if (await (async () => {\n        const v173 = stdlib.gt(v158, v162);\n        \n        return v173;})()) {\n        sim_r.isHalt = false;\n        }\n      else {\n        const v205 = stdlib.ge(v159, v160);\n        const v206 = v205 ? stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0) : stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n        const v207 = stdlib.eq(v206, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0));\n        const v208 = v207 ? v151 : v152;\n        sim_r.txns.push({\n          amt: v167,\n          kind: 'from',\n          to: v208,\n          tok: undefined\n          });\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n          })\n        sim_r.isHalt = true;\n        }\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0, ctc1, ctc1, ctc1, ctc0, ctc0],\n    waitIfNotPresent: false\n    }));\n  const {data: [v149, v150, v151, v152], secs: v154, time: v153, didSend: v37, from: v148 } = txn2;\n  ;\n  const v156 = stdlib.addressEq(v137, v148);\n  stdlib.assert(v156, {\n    at: './index.rsh:44:14:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Pollster'\n    });\n  const v158 = stdlib.add(v138, v150);\n  let v159 = stdlib.checkedBigNumberify('./index.rsh:49:24:decimal', stdlib.UInt_max, 0);\n  let v160 = stdlib.checkedBigNumberify('./index.rsh:49:27:decimal', stdlib.UInt_max, 0);\n  let v161 = v153;\n  let v162 = v138;\n  let v167 = stdlib.checkedBigNumberify('./index.rsh:32:13:after expr stmt semicolon', stdlib.UInt_max, 0);\n  \n  while (await (async () => {\n    const v173 = stdlib.gt(v158, v162);\n    \n    return v173;})()) {\n    const txn3 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 1,\n      funcNum: 3,\n      out_tys: [ctc3],\n      timeoutAt: ['time', v158],\n      waitIfNotPresent: false\n      }));\n    if (txn3.didTimeout) {\n      const txn4 = await (ctc.sendrecv({\n        args: [v149, v151, v152, v158, v159, v160, v161, v167],\n        evt_cnt: 0,\n        funcNum: 4,\n        lct: v161,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn4) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const {data: [], secs: v198, time: v197, didSend: v99, from: v196 } = txn4;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          \n          const cv159 = v159;\n          const cv160 = v160;\n          const cv161 = v197;\n          const cv162 = v161;\n          const cv167 = v167;\n          \n          await (async () => {\n            const v159 = cv159;\n            const v160 = cv160;\n            const v161 = cv161;\n            const v162 = cv162;\n            const v167 = cv167;\n            \n            if (await (async () => {\n              const v173 = stdlib.gt(v158, v162);\n              \n              return v173;})()) {\n              sim_r.isHalt = false;\n              }\n            else {\n              const v205 = stdlib.ge(v159, v160);\n              const v206 = v205 ? stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0) : stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n              const v207 = stdlib.eq(v206, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0));\n              const v208 = v207 ? v151 : v152;\n              sim_r.txns.push({\n                amt: v167,\n                kind: 'from',\n                to: v208,\n                tok: undefined\n                });\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }})();\n          return sim_r;\n          }),\n        soloSend: false,\n        timeoutAt: undefined,\n        tys: [ctc1, ctc0, ctc0, ctc1, ctc1, ctc1, ctc1, ctc1],\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v198, time: v197, didSend: v99, from: v196 } = txn4;\n      ;\n      stdlib.protect(ctc4, await interact.showOutcome(stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2), v159, v160), {\n        at: './index.rsh:36:29:application',\n        fs: ['at ./index.rsh:35:11:application call to [unknown function] (defined at: ./index.rsh:35:34:function exp)', 'at ./index.rsh:64:41:application call to [unknown function] (defined at: ./index.rsh:34:51:function exp)', 'at ./index.rsh:62:36:application call to [unknown function] (defined at: ./index.rsh:62:36:function exp)'],\n        msg: 'showOutcome',\n        who: 'Pollster'\n        });\n      \n      const cv159 = v159;\n      const cv160 = v160;\n      const cv161 = v197;\n      const cv162 = v161;\n      const cv167 = v167;\n      \n      v159 = cv159;\n      v160 = cv160;\n      v161 = cv161;\n      v162 = cv162;\n      v167 = cv167;\n      \n      continue;\n      }\n    else {\n      const {data: [v182], secs: v184, time: v183, didSend: v75, from: v181 } = txn3;\n      const v186 = stdlib.add(v167, v149);\n      ;\n      const v188 = [stdlib.checkedBigNumberify('./index.rsh:60:43:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:60:46:decimal', stdlib.UInt_max, 0)];\n      const v189 = [stdlib.checkedBigNumberify('./index.rsh:60:54:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:60:57:decimal', stdlib.UInt_max, 1)];\n      const v190 = v182 ? v188 : v189;\n      const v191 = v190[stdlib.checkedBigNumberify('./index.rsh:60:17:array', stdlib.UInt_max, 0)];\n      const v192 = v190[stdlib.checkedBigNumberify('./index.rsh:60:17:array', stdlib.UInt_max, 1)];\n      const v193 = stdlib.add(v159, v191);\n      const v194 = stdlib.add(v160, v192);\n      const cv159 = v193;\n      const cv160 = v194;\n      const cv161 = v183;\n      const cv162 = v161;\n      const cv167 = v186;\n      \n      v159 = cv159;\n      v160 = cv160;\n      v161 = cv161;\n      v162 = cv162;\n      v167 = cv167;\n      \n      continue;}\n    \n    }\n  const v205 = stdlib.ge(v159, v160);\n  const v206 = v205 ? stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0) : stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n  const v207 = stdlib.eq(v206, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0));\n  const v208 = v207 ? v151 : v152;\n  ;\n  stdlib.protect(ctc4, await interact.showOutcome(v206, v159, v160), {\n    at: './index.rsh:36:29:application',\n    fs: ['at ./index.rsh:35:11:application call to [unknown function] (defined at: ./index.rsh:35:34:function exp)', 'at ./index.rsh:71:37:application call to [unknown function] (defined at: ./index.rsh:34:51:function exp)'],\n    msg: 'showOutcome',\n    who: 'Pollster'\n    });\n  \n  return;\n  \n  \n  \n  \n  };\nexport async function Voter(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Voter expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Voter expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Bool;\n  const ctc3 = stdlib.T_Null;\n  \n  \n  const txn1 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 0,\n    funcNum: 0,\n    out_tys: [],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [], secs: v139, time: v138, didSend: v19, from: v137 } = txn1;\n  ;\n  const txn2 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 4,\n    funcNum: 1,\n    out_tys: [ctc0, ctc0, ctc1, ctc1],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [v149, v150, v151, v152], secs: v154, time: v153, didSend: v37, from: v148 } = txn2;\n  ;\n  const v156 = stdlib.addressEq(v137, v148);\n  stdlib.assert(v156, {\n    at: './index.rsh:44:14:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  const v158 = stdlib.add(v138, v150);\n  let v159 = stdlib.checkedBigNumberify('./index.rsh:49:24:decimal', stdlib.UInt_max, 0);\n  let v160 = stdlib.checkedBigNumberify('./index.rsh:49:27:decimal', stdlib.UInt_max, 0);\n  let v161 = v153;\n  let v162 = v138;\n  let v167 = stdlib.checkedBigNumberify('./index.rsh:32:13:after expr stmt semicolon', stdlib.UInt_max, 0);\n  \n  while (await (async () => {\n    const v173 = stdlib.gt(v158, v162);\n    \n    return v173;})()) {\n    const v178 = stdlib.protect(ctc2, await interact.getVote(), {\n      at: './index.rsh:53:43:application',\n      fs: ['at ./index.rsh:52:23:application call to [unknown function] (defined at: ./index.rsh:52:23:function exp)', 'at ./index.rsh:52:23:application call to [unknown function] (defined at: ./index.rsh:52:23:function exp)'],\n      msg: 'getVote',\n      who: 'Voter'\n      });\n    const v179 = stdlib.protect(ctc2, await interact.shouldVote(), {\n      at: './index.rsh:54:47:application',\n      fs: ['at ./index.rsh:52:23:application call to [unknown function] (defined at: ./index.rsh:52:23:function exp)', 'at ./index.rsh:52:23:application call to [unknown function] (defined at: ./index.rsh:52:23:function exp)'],\n      msg: 'shouldVote',\n      who: 'Voter'\n      });\n    \n    const txn3 = await (ctc.sendrecv({\n      args: [v149, v151, v152, v158, v159, v160, v161, v167, v178],\n      evt_cnt: 1,\n      funcNum: 3,\n      lct: v161,\n      onlyIf: v179,\n      out_tys: [ctc2],\n      pay: [v149, []],\n      sim_p: (async (txn3) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v182], secs: v184, time: v183, didSend: v75, from: v181 } = txn3;\n        \n        const v186 = stdlib.add(v167, v149);\n        sim_r.txns.push({\n          amt: v149,\n          kind: 'to',\n          tok: undefined\n          });\n        \n        const v188 = [stdlib.checkedBigNumberify('./index.rsh:60:43:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:60:46:decimal', stdlib.UInt_max, 0)];\n        const v189 = [stdlib.checkedBigNumberify('./index.rsh:60:54:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:60:57:decimal', stdlib.UInt_max, 1)];\n        const v190 = v182 ? v188 : v189;\n        const v191 = v190[stdlib.checkedBigNumberify('./index.rsh:60:17:array', stdlib.UInt_max, 0)];\n        const v192 = v190[stdlib.checkedBigNumberify('./index.rsh:60:17:array', stdlib.UInt_max, 1)];\n        const v193 = stdlib.add(v159, v191);\n        const v194 = stdlib.add(v160, v192);\n        const cv159 = v193;\n        const cv160 = v194;\n        const cv161 = v183;\n        const cv162 = v161;\n        const cv167 = v186;\n        \n        await (async () => {\n          const v159 = cv159;\n          const v160 = cv160;\n          const v161 = cv161;\n          const v162 = cv162;\n          const v167 = cv167;\n          \n          if (await (async () => {\n            const v173 = stdlib.gt(v158, v162);\n            \n            return v173;})()) {\n            sim_r.isHalt = false;\n            }\n          else {\n            const v205 = stdlib.ge(v159, v160);\n            const v206 = v205 ? stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0) : stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n            const v207 = stdlib.eq(v206, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0));\n            const v208 = v207 ? v151 : v152;\n            sim_r.txns.push({\n              amt: v167,\n              kind: 'from',\n              to: v208,\n              tok: undefined\n              });\n            sim_r.txns.push({\n              kind: 'halt',\n              tok: undefined\n              })\n            sim_r.isHalt = true;\n            }})();\n        return sim_r;\n        }),\n      soloSend: false,\n      timeoutAt: ['time', v158],\n      tys: [ctc0, ctc1, ctc1, ctc0, ctc0, ctc0, ctc0, ctc0, ctc2],\n      waitIfNotPresent: false\n      }));\n    if (txn3.didTimeout) {\n      const txn4 = await (ctc.sendrecv({\n        args: [v149, v151, v152, v158, v159, v160, v161, v167],\n        evt_cnt: 0,\n        funcNum: 4,\n        lct: v161,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn4) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const {data: [], secs: v198, time: v197, didSend: v99, from: v196 } = txn4;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          \n          const cv159 = v159;\n          const cv160 = v160;\n          const cv161 = v197;\n          const cv162 = v161;\n          const cv167 = v167;\n          \n          await (async () => {\n            const v159 = cv159;\n            const v160 = cv160;\n            const v161 = cv161;\n            const v162 = cv162;\n            const v167 = cv167;\n            \n            if (await (async () => {\n              const v173 = stdlib.gt(v158, v162);\n              \n              return v173;})()) {\n              sim_r.isHalt = false;\n              }\n            else {\n              const v205 = stdlib.ge(v159, v160);\n              const v206 = v205 ? stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0) : stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n              const v207 = stdlib.eq(v206, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0));\n              const v208 = v207 ? v151 : v152;\n              sim_r.txns.push({\n                amt: v167,\n                kind: 'from',\n                to: v208,\n                tok: undefined\n                });\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }})();\n          return sim_r;\n          }),\n        soloSend: false,\n        timeoutAt: undefined,\n        tys: [ctc0, ctc1, ctc1, ctc0, ctc0, ctc0, ctc0, ctc0],\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v198, time: v197, didSend: v99, from: v196 } = txn4;\n      ;\n      stdlib.protect(ctc3, await interact.showOutcome(stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2), v159, v160), {\n        at: './index.rsh:36:29:application',\n        fs: ['at ./index.rsh:35:11:application call to [unknown function] (defined at: ./index.rsh:35:34:function exp)', 'at ./index.rsh:64:41:application call to [unknown function] (defined at: ./index.rsh:34:51:function exp)', 'at ./index.rsh:62:36:application call to [unknown function] (defined at: ./index.rsh:62:36:function exp)'],\n        msg: 'showOutcome',\n        who: 'Voter'\n        });\n      \n      const cv159 = v159;\n      const cv160 = v160;\n      const cv161 = v197;\n      const cv162 = v161;\n      const cv167 = v167;\n      \n      v159 = cv159;\n      v160 = cv160;\n      v161 = cv161;\n      v162 = cv162;\n      v167 = cv167;\n      \n      continue;\n      }\n    else {\n      const {data: [v182], secs: v184, time: v183, didSend: v75, from: v181 } = txn3;\n      const v186 = stdlib.add(v167, v149);\n      ;\n      stdlib.protect(ctc3, await interact.voterWas(v181), {\n        at: './index.rsh:59:45:application',\n        fs: ['at ./index.rsh:59:21:application call to [unknown function] (defined at: ./index.rsh:59:25:function exp)', 'at ./index.rsh:57:20:application call to [unknown function] (defined at: ./index.rsh:57:20:function exp)'],\n        msg: 'voterWas',\n        who: 'Voter'\n        });\n      \n      const v188 = [stdlib.checkedBigNumberify('./index.rsh:60:43:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:60:46:decimal', stdlib.UInt_max, 0)];\n      const v189 = [stdlib.checkedBigNumberify('./index.rsh:60:54:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:60:57:decimal', stdlib.UInt_max, 1)];\n      const v190 = v182 ? v188 : v189;\n      const v191 = v190[stdlib.checkedBigNumberify('./index.rsh:60:17:array', stdlib.UInt_max, 0)];\n      const v192 = v190[stdlib.checkedBigNumberify('./index.rsh:60:17:array', stdlib.UInt_max, 1)];\n      const v193 = stdlib.add(v159, v191);\n      const v194 = stdlib.add(v160, v192);\n      const cv159 = v193;\n      const cv160 = v194;\n      const cv161 = v183;\n      const cv162 = v161;\n      const cv167 = v186;\n      \n      v159 = cv159;\n      v160 = cv160;\n      v161 = cv161;\n      v162 = cv162;\n      v167 = cv167;\n      \n      continue;}\n    \n    }\n  const v205 = stdlib.ge(v159, v160);\n  const v206 = v205 ? stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0) : stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n  const v207 = stdlib.eq(v206, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0));\n  const v208 = v207 ? v151 : v152;\n  ;\n  stdlib.protect(ctc3, await interact.showOutcome(v206, v159, v160), {\n    at: './index.rsh:36:29:application',\n    fs: ['at ./index.rsh:35:11:application call to [unknown function] (defined at: ./index.rsh:35:34:function exp)', 'at ./index.rsh:71:37:application call to [unknown function] (defined at: ./index.rsh:34:51:function exp)'],\n    msg: 'showOutcome',\n    who: 'Voter'\n    });\n  \n  return;\n  \n  \n  \n  \n  };\nexport const _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\nint 8\nextract_uint64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:38:14:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:38:14:dot\"\n// \"[]\"\ntxn Sender\nglobal Round\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 40\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l2_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 80\n==\nassert\ndup\nint 0\nextract_uint64\nstore 253\ndup\nint 8\nextract_uint64\nstore 252\ndup\nextract 16 32\nstore 251\ndup\nextract 48 32\nstore 250\npop\n// \"CheckPay\"\n// \"./index.rsh:44:14:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:44:14:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 253\nitob\nload 251\nconcat\nload 250\nconcat\nload 254\nload 252\n+\nitob\nconcat\nint 16\nbzero\nglobal Round\nitob\nconcat\nload 254\nitob\nconcat\nint 8\nbzero\nconcat\nb loopBody2\nl2_afterHandler1:\nl3_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l4_afterHandler3\npop\n// check step\nint 4\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nint 0\nextract_uint64\nstore 255\ndup\nextract 8 32\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\ndup\nint 96\nextract_uint64\nstore 249\ndup\nint 104\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 1\n==\nassert\ndup\nbtoi\nstore 247\npop\nglobal Round\nload 252\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:49:21:dot\"\n// \"[]\"\nload 255\ndup\nbz l5_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl5_checkTxnK:\npop\nbyte base64(AAAAAAAAAAAAAAAAAAAAAQ==)\nbyte base64(AAAAAAAAAAEAAAAAAAAAAA==)\nload 247\nselect\nstore 246\nload 255\nitob\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nload 246\nint 0\nextract_uint64\n+\nitob\nload 250\nload 246\nint 8\nextract_uint64\n+\nitob\nconcat\nglobal Round\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nload 255\n+\nitob\nconcat\nb loopBody2\nl4_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l6_afterHandler4\npop\n// check step\nint 4\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nint 0\nextract_uint64\nstore 255\ndup\nextract 8 32\nstore 254\ndup\nextract 40 32\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\ndup\nint 96\nextract_uint64\nstore 249\ndup\nint 104\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 252\n>=\nassert\n// \"CheckPay\"\n// \"./index.rsh:63:17:dot\"\n// \"[at ./index.rsh:62:36:application call to [unknown function] (defined at: ./index.rsh:62:36:function exp)]\"\nload 255\nitob\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nload 250\nitob\nconcat\nglobal Round\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nb loopBody2\nl6_afterHandler4:\nint 0\nassert\nloopBody2:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nint 8\nextract_uint64\nstore 254\ndup\nint 16\nextract_uint64\nstore 253\ndup\nint 24\nextract_uint64\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\npop\ndup\nint 0\nextract_uint64\nstore 250\ndup\nextract 8 32\nstore 249\ndup\nextract 40 32\nstore 248\ndup\nint 72\nextract_uint64\nstore 247\npop\nload 247\nload 252\n>\nbz l7_ifF\nload 250\nitob\nload 249\nconcat\nload 248\nconcat\nload 247\nitob\nconcat\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 251\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 112\napp_global_put\npop\nint 4\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl7_ifF:\nload 251\ndup\nbz l8_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 248\nload 249\nint 1\nint 0\nload 255\nload 254\n>=\nselect\nint 0\n==\nselect\nitxn_field Receiver\nitxn_submit\nint 0\nl8_makeTxnK:\npop\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl9_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 112,\n  unsupported: [],\n  version: 6\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v149\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v150\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v151\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v152\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v182\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v149\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v150\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v151\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v152\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v182\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x6080604052604051620010ab380380620010ab8339810160408190526200002691620001ab565b600080554360035560408051825181526020808401511515908201527ff6b2f582026eaf8fd1fe583a836da56a1b30b8bd595170ad494773aa9148b06e910160405180910390a16200007b34156007620000db565b604080518082018252338082524360208084018281526001600081905592909255845180820193909352905182850152835180830385018152606090920190935280519192620000d2926002929091019062000105565b50505062000253565b81620001015760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b828054620001139062000216565b90600052602060002090601f01602090048101928262000137576000855562000182565b82601f106200015257805160ff191683800117855562000182565b8280016001018555821562000182579182015b828111156200018257825182559160200191906001019062000165565b506200019092915062000194565b5090565b5b8082111562000190576000815560010162000195565b600060408284031215620001be57600080fd5b604080519081016001600160401b0381118282101715620001ef57634e487b7160e01b600052604160045260246000fd5b60405282518152602083015180151581146200020a57600080fd5b60208201529392505050565b600181811c908216806200022b57607f821691505b602082108114156200024d57634e487b7160e01b600052602260045260246000fd5b50919050565b610e4880620002636000396000f3fe6080604052600436106100565760003560e01c80630d7b1bda1461005f5780631e93b0f1146100725780638323075714610096578063a7661d54146100ab578063ab53f2c6146100be578063e2186a08146100e157005b3661005d57005b005b61005d61006d366004610b0f565b6100f4565b34801561007e57600080fd5b506003545b6040519081526020015b60405180910390f35b3480156100a257600080fd5b50600154610083565b61005d6100b9366004610b39565b6102d0565b3480156100ca57600080fd5b506100d3610477565b60405161008d929190610b5c565b61005d6100ef366004610b39565b610514565b610104600160005414600a61074d565b61011e8135158061011757506001548235145b600b61074d565b60008080556002805461013090610bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461015c90610bb9565b80156101a95780601f1061017e576101008083540402835291602001916101a9565b820191906000526020600020905b81548152906001019060200180831161018c57829003601f168201915b50505050508060200190518101906101c19190610c13565b90507f53a4280b5abc371e37047517f094be6e8d732584eceaec73dfd6916b892cd62f826040516101f29190610c79565b60405180910390a16102063415600861074d565b805161021e906001600160a01b03163314600961074d565b610226610977565b80516020840135905261023f6080840160608501610cd2565b81516001600160a01b0390911660209091015261026260a0840160808501610cd2565b81516001600160a01b0390911660409182015260208301516102879185013590610cef565b81516060908101919091526020808301805160009081905281518301819052815143604090910152918501518151909301929092529051608001526102cb81610776565b505050565b6102e0600460005414601161074d565b6102fa813515806102f357506001548235145b601261074d565b60008080556002805461030c90610bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461033890610bb9565b80156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b505050505080602001905181019061039d9190610d15565b90506103b18160600151431015601361074d565b7fbe072b3e7ff68f92e7d9d05168a4666cd1ba2609e77c14d9feaf0d14991875d1826040516103e09190610dd6565b60405180910390a16103f43415601061074d565b6103fc610977565b815181515260208083015182516001600160a01b03918216908301526040808501518451921691810191909152606080850151845182015260808086015184860180519190915260a087015181519095019490945283514393019290925260c085015183519091015260e0840151915101526102cb81610776565b60006060600054600280805461048c90610bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546104b890610bb9565b80156105055780601f106104da57610100808354040283529160200191610505565b820191906000526020600020905b8154815290600101906020018083116104e857829003601f168201915b50505050509050915091509091565b610524600460005414600d61074d565b61053e8135158061053757506001548235145b600e61074d565b60008080556002805461055090610bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461057c90610bb9565b80156105c95780601f1061059e576101008083540402835291602001916105c9565b820191906000526020600020905b8154815290600101906020018083116105ac57829003601f168201915b50505050508060200190518101906105e19190610d15565b90506105eb6109de565b6105fc82606001514310600f61074d565b7f46fa595f7924075e82e3f58fa001775f50eda2857c56728dafc78ec80de66f498360405161062b9190610dd6565b60405180910390a18151610642903414600c61074d565b8051600190819052815160006020918201819052818401805191909152518101919091526106769060408501908501610df7565b610684578060200151610687565b80515b6040820152610694610977565b825181515260208084015182516001600160a01b0391821692019190915260408085015183519216918101919091526060808501518351909101528201515160808401516106e29190610cef565b602080830151919091526040830151015160a08401516107029190610cef565b602080830180519091019190915280514360409091015260c0840151905160600152825160e08401516107359190610cef565b60208201516080015261074781610776565b50505050565b816107725760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b80602001516060015181600001516060015111156108e7576107e86040518061010001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b815151815281516020908101516001600160a01b0390811682840152835160409081015190911681840152835160609081015190840152818401805151608080860191909152815184015160a0860152815183015160c08601529051015160e0840152600460005543600155516108c39183910160006101008201905082518252602083015160018060a01b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b604051602081830303815290604052600290805190602001906102cb929190610a40565b6020808201519081015190516000911115610903576001610906565b60005b146109165780516040015161091d565b8051602001515b6001600160a01b03166108fc8260200151608001519081150290604051600060405180830381858888f1935050505015801561095d573d6000803e3d6000fd5b506000808055600181905561097490600290610ac4565b50565b6040805160c0810182526000918101828152606082018390526080820183905260a082019290925290819081526020016109d96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b6040805160a08101909152600060608201818152608083019190915281908152602001610a1e604051806040016040528060008152602001600081525090565b81526020016109d9604051806040016040528060008152602001600081525090565b828054610a4c90610bb9565b90600052602060002090601f016020900481019282610a6e5760008555610ab4565b82601f10610a8757805160ff1916838001178555610ab4565b82800160010185558215610ab4579182015b82811115610ab4578251825591602001919060010190610a99565b50610ac0929150610afa565b5090565b508054610ad090610bb9565b6000825580601f10610ae0575050565b601f01602090049060005260206000209081019061097491905b5b80821115610ac05760008155600101610afb565b600060a08284031215610b2157600080fd5b50919050565b600060408284031215610b2157600080fd5b600060408284031215610b4b57600080fd5b610b558383610b27565b9392505050565b82815260006020604081840152835180604085015260005b81811015610b9057858101830151858201606001528201610b74565b81811115610ba2576000606083870101525b50601f01601f191692909201606001949350505050565b600181811c90821680610bcd57607f821691505b60208210811415610b2157634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461097457600080fd5b8051610c0e81610bee565b919050565b600060408284031215610c2557600080fd5b6040516040810181811067ffffffffffffffff82111715610c5657634e487b7160e01b600052604160045260246000fd5b6040528251610c6481610bee565b81526020928301519281019290925250919050565b81358152602080830135908201526040808301359082015260a081016060830135610ca381610bee565b6001600160a01b039081166060840152608084013590610cc282610bee565b8082166080850152505092915050565b600060208284031215610ce457600080fd5b8135610b5581610bee565b60008219821115610d1057634e487b7160e01b600052601160045260246000fd5b500190565b6000610100808385031215610d2957600080fd5b6040519081019067ffffffffffffffff82118183101715610d5a57634e487b7160e01b600052604160045260246000fd5b816040528351815260208401519150610d7282610bee565b816020820152610d8460408501610c03565b6040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b80358015158114610c0e57600080fd5b8135815260408101610dea60208401610dc6565b1515602083015292915050565b600060208284031215610e0957600080fd5b610b5582610dc656fea264697066735822122081ae483c088c05256e7df34a277247f5a88081356bc8172e52e2f9db3934b26864736f6c63430008090033`,\n  BytecodeLen: 4267,\n  Which: `oD`,\n  version: 5,\n  views: {\n    }\n  };\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\nexport const _Participants = {\n  \"Pollster\": Pollster,\n  \"Voter\": Voter\n  };\nexport const _APIs = {\n  };\n","export async function run() {\r\n  window.reachLog = \"Starting reach...\"\r\n\r\n  function log(input){\r\n    window.reachLog += (\"\\n\" + input)\r\n  }\r\n  \r\n  const [ N, timeoutFactor ] =\r\n    window.stdlib.connector === 'ALGO' ? [ 2, 2 ] : [ 5, 2 ];\r\n\r\n  const startingBalance = window.stdlib.parseCurrency(100);\r\n  const accPollster = window.acct\r\n  const accVoter_arr = await Promise.all( Array.from({length: N}, () => window.acct) );\r\n  const accAlice = window.acct\r\n  const accBob = window.acct\r\n\r\n  const fmt = (x) => window.stdlib.formatCurrency(x, 4);\r\n  const getBalance = async (who) => fmt(await window.stdlib.balanceOf(who));\r\n  const beforeAlice = await getBalance(accAlice);\r\n  const beforeBob = await getBalance(accBob);\r\n\r\n  const ctcPollster = accPollster.deploy(window.backend);\r\n  const ctcInfo = ctcPollster.getInfo();\r\n\r\n  const OUTCOME = ['Alice wins', 'Bob wins', 'Timeout'];\r\n  const Common = (Who) => ({\r\n      showOutcome: (outcome, forA, forB) => {\r\n        if ( outcome == 2 ) {\r\n          log(`${Who} saw the timeout`); }\r\n        else {\r\n          log(`${Who} saw a ${forA}-${forB} outcome: ${OUTCOME[outcome]}`);\r\n        }\r\n  } });\r\n\r\n  await Promise.all([\r\n    window.backend.Pollster(ctcPollster, {\r\n      ...Common('Pollster'),\r\n      getParams: () => ({\r\n        ticketPrice: window.stdlib.parseCurrency(5),\r\n        deadline: N*timeoutFactor,\r\n        aliceAddr: accAlice,\r\n        bobAddr: accBob,\r\n      }),\r\n    }),\r\n  ].concat(\r\n    accVoter_arr.map((accVoter, i) => {\r\n      const ctcVoter = accVoter.attach(window.backend, ctcInfo);\r\n      const Who = `Voter #${i}`;\r\n      const vote = Math.random() < 0.5;\r\n      let voted = false;\r\n      return window.backend.Voter(ctcVoter, {\r\n        ...Common(Who),\r\n        getVote: (() => vote),\r\n        voterWas: ((voterAddr) => {\r\n          if ( window.stdlib.addressEq(voterAddr, accVoter) ) {\r\n            log(`${Who} voted: ${vote ? 'Alice' : 'Bob'}`);\r\n            voted = true;\r\n          } } ),\r\n        shouldVote: (() => ! voted) }); } )\r\n  ));\r\n\r\n  const afterAlice = await getBalance(accAlice);\r\n  const afterBob = await getBalance(accBob);\r\n\r\n  log(`Alice went from ${beforeAlice} to ${afterAlice}.`);\r\n  log(`Bob went from ${beforeBob} to ${afterBob}.`);\r\n\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}